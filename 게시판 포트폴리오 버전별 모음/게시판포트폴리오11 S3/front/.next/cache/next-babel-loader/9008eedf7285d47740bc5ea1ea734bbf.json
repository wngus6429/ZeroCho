{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var initialState = {\n  isLoggedIn: false,\n  //로그인 시도중\n  isLoggingIn: false,\n  //\n  isLoggingOut: false,\n  //로그아웃 시도중\n  me: null,\n  signUpDate: {},\n  loginData: {}\n}; //export 해둬야 index.js에서 모으지\n\nexport var loginRequestAction = function loginRequestAction(data) {\n  return {\n    type: \"LOG_IN_REQUEST\",\n    data: data\n  };\n};\nexport var logoutRequestAction = function logoutRequestAction(data) {\n  return {\n    type: \"LOG_OUT_REQUEST\"\n  };\n}; // const changeNickname = {\n//     type: \"CHANGE_NICKNAME\",\n//     data: \"boogicho\",\n//   };\n//async action creator //비동기 action creator\n// action creator 유저가 닉네임 어떻게 바꿀지 모르니 이렇게 해야함\n\nvar changeNickname = function changeNickname(data) {\n  return {\n    type: \"CHANGE_NICKNAME\",\n    data: data\n  };\n};\n\nchangeNickname(\"boogicho\"); // { type:\"CHANGE_NICKNAME\", data:\"boogicho\" }\n//store.dispatch(changeNickname('mighty tak')); //이게 좋지\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"LOG_IN_REQUEST\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        //안바꾸고 싶은건 ... 써서 참조\n        isLoggingIn: true //바꾸고 싶은걸 이렇게 적어준다.\n\n      });\n\n    case \"LOG_IN_SUCCESS\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        //안바꾸고 싶은건 ... 써서 참조\n        isLoggingIn: false,\n        isLoggedIn: true,\n        //바꾸고 싶은걸 이렇게 적어준다.\n        me: _objectSpread(_objectSpread({}, action.data), {}, {\n          nickname: \"zerocho\"\n        })\n      });\n\n    case \"LOG_IN_FAILURE\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        //안바꾸고 싶은건 ... 써서 참조\n        isLoggedIn: false,\n        //바꾸고 싶은걸 이렇게 적어준다.\n        isLoggingIn: false\n      });\n\n    case \"LOG_OUT_REQUEST\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        //안바꾸고 싶은건 ... 써서 참조\n        isLoggingOut: true //바꾸고 싶은걸 이렇게 적어준다.\n\n      });\n\n    case \"LOG_OUT_SUCCESS\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        //안바꾸고 싶은건 ... 써서 참조\n        isLoggingOut: false,\n        isLoggedIn: false,\n        //바꾸고 싶은걸 이렇게 적어준다.\n        me: null\n      });\n\n    case \"LOG_OUT_FAILURE\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        //안바꾸고 싶은건 ... 써서 참조\n        isLoggingOut: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/wngus/Documents/GitHub/ZeroCho/nodebird/prepare/front/reducers/user.js"],"names":["initialState","isLoggedIn","isLoggingIn","isLoggingOut","me","signUpDate","loginData","loginRequestAction","data","type","logoutRequestAction","changeNickname","reducer","state","action","nickname"],"mappings":";;;;;;AAAA,OAAO,IAAMA,YAAY,GAAG;AAC1BC,EAAAA,UAAU,EAAE,KADc;AACP;AACnBC,EAAAA,WAAW,EAAE,KAFa;AAEN;AACpBC,EAAAA,YAAY,EAAE,KAHY;AAGL;AACrBC,EAAAA,EAAE,EAAE,IAJsB;AAK1BC,EAAAA,UAAU,EAAE,EALc;AAM1BC,EAAAA,SAAS,EAAE;AANe,CAArB,C,CAQP;;AAEA,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,IAAD,EAAU;AAC1C,SAAO;AACLC,IAAAA,IAAI,EAAE,gBADD;AAELD,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,IAAME,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACF,IAAD,EAAU;AAC3C,SAAO;AACLC,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM,C,CAKP;AACA;AACA;AACA;AAEA;AAEA;;AACA,IAAME,cAAc,GAAG,SAAjBA,cAAiB,CAACH,IAAD,EAAU;AAC/B,SAAO;AACLC,IAAAA,IAAI,EAAE,iBADD;AAELD,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID,CALD;;AAMAG,cAAc,CAAC,UAAD,CAAd,C,CACA;AACA;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBb,YAAyB;AAAA,MAAXc,MAAW;;AAChD,UAAQA,MAAM,CAACL,IAAf;AACE,SAAK,gBAAL;AACE,6CACKI,KADL;AACY;AACVX,QAAAA,WAAW,EAAE,IAFf,CAEqB;;AAFrB;;AAIF,SAAK,gBAAL;AACE,6CACKW,KADL;AACY;AACVX,QAAAA,WAAW,EAAE,KAFf;AAGED,QAAAA,UAAU,EAAE,IAHd;AAGoB;AAClBG,QAAAA,EAAE,kCAAOU,MAAM,CAACN,IAAd;AAAoBO,UAAAA,QAAQ,EAAE;AAA9B;AAJJ;;AAMF,SAAK,gBAAL;AACE,6CACKF,KADL;AACY;AACVZ,QAAAA,UAAU,EAAE,KAFd;AAEqB;AACnBC,QAAAA,WAAW,EAAE;AAHf;;AAKF,SAAK,iBAAL;AACE,6CACKW,KADL;AACY;AACVV,QAAAA,YAAY,EAAE,IAFhB,CAEsB;;AAFtB;;AAIF,SAAK,iBAAL;AACE,6CACKU,KADL;AACY;AACVV,QAAAA,YAAY,EAAE,KAFhB;AAGEF,QAAAA,UAAU,EAAE,KAHd;AAGqB;AACnBG,QAAAA,EAAE,EAAE;AAJN;;AAMF,SAAK,iBAAL;AACE,6CACKS,KADL;AACY;AACVV,QAAAA,YAAY,EAAE;AAFhB;;AAIF;AACE,aAAOU,KAAP;AArCJ;AAuCD,CAxCD;;AA0CA,eAAeD,OAAf","sourcesContent":["export const initialState = {\r\n  isLoggedIn: false, //로그인 시도중\r\n  isLoggingIn: false, //\r\n  isLoggingOut: false, //로그아웃 시도중\r\n  me: null,\r\n  signUpDate: {},\r\n  loginData: {},\r\n};\r\n//export 해둬야 index.js에서 모으지\r\n\r\nexport const loginRequestAction = (data) => {\r\n  return {\r\n    type: \"LOG_IN_REQUEST\",\r\n    data,\r\n  };\r\n};\r\n\r\nexport const logoutRequestAction = (data) => {\r\n  return {\r\n    type: \"LOG_OUT_REQUEST\",\r\n  };\r\n};\r\n// const changeNickname = {\r\n//     type: \"CHANGE_NICKNAME\",\r\n//     data: \"boogicho\",\r\n//   };\r\n\r\n//async action creator //비동기 action creator\r\n\r\n// action creator 유저가 닉네임 어떻게 바꿀지 모르니 이렇게 해야함\r\nconst changeNickname = (data) => {\r\n  return {\r\n    type: \"CHANGE_NICKNAME\",\r\n    data,\r\n  };\r\n};\r\nchangeNickname(\"boogicho\");\r\n// { type:\"CHANGE_NICKNAME\", data:\"boogicho\" }\r\n//store.dispatch(changeNickname('mighty tak')); //이게 좋지\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"LOG_IN_REQUEST\":\r\n      return {\r\n        ...state, //안바꾸고 싶은건 ... 써서 참조\r\n        isLoggingIn: true, //바꾸고 싶은걸 이렇게 적어준다.\r\n      };\r\n    case \"LOG_IN_SUCCESS\":\r\n      return {\r\n        ...state, //안바꾸고 싶은건 ... 써서 참조\r\n        isLoggingIn: false,\r\n        isLoggedIn: true, //바꾸고 싶은걸 이렇게 적어준다.\r\n        me: { ...action.data, nickname: \"zerocho\" },\r\n      };\r\n    case \"LOG_IN_FAILURE\":\r\n      return {\r\n        ...state, //안바꾸고 싶은건 ... 써서 참조\r\n        isLoggedIn: false, //바꾸고 싶은걸 이렇게 적어준다.\r\n        isLoggingIn: false,\r\n      };\r\n    case \"LOG_OUT_REQUEST\":\r\n      return {\r\n        ...state, //안바꾸고 싶은건 ... 써서 참조\r\n        isLoggingOut: true, //바꾸고 싶은걸 이렇게 적어준다.\r\n      };\r\n    case \"LOG_OUT_SUCCESS\":\r\n      return {\r\n        ...state, //안바꾸고 싶은건 ... 써서 참조\r\n        isLoggingOut: false,\r\n        isLoggedIn: false, //바꾸고 싶은걸 이렇게 적어준다.\r\n        me: null,\r\n      };\r\n    case \"LOG_OUT_FAILURE\":\r\n      return {\r\n        ...state, //안바꾸고 싶은건 ... 써서 참조\r\n        isLoggingOut: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}