{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n.ant-row{\\n  margin-left:0 !important;\\n  margin-right:0 !important;\\n}\\n.ant-col:first-child{\\n  padding-left:0 !important;\\n}\\n.ant-col:last-child{\\n  padding-right:0 !important;\\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useCallback } from \"react\"; //없어도됨\n\nimport Link from \"next/link\"; //next 자체적 라우터\n\nimport { Menu, Input, Row, Col } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport styled from \"styled-components\";\nimport UserProfile from \"../components/UserProfile\";\nimport LoginForm from \"../components/LoginForm\";\nimport { useSelector } from \"react-redux\"; //리액트랑 리덕스 연결\n\nimport Router from \"next/router\"; //프로그래밍적으로 주소를 옮길떄는 router사용\n\nimport { createGlobalStyle } from \"styled-components\";\nimport { TwitterOutlined } from \"@ant-design/icons\";\nimport useinput from \"../hooks/useinput\";\nvar SearchInput = styled(Input.Search).withConfig({\n  displayName: \"AppLayout__SearchInput\",\n  componentId: \"sc-1x6xxdo-0\"\n})([\"vertical-align:middle;\"]); //gutter 같은거 넣어서 밑에 작은 스크롤이 생겨서 없앨려고\n\nvar Global = createGlobalStyle(_templateObject());\n\nvar AppLayout = function AppLayout(_ref) {\n  var children = _ref.children;\n\n  //const [isLoggedIn, setIsLoggedIn] = useState(false); //리덕스가 있어서\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me; //isLoggedIn이 바뀌면 알아서 applayout이 리랜더링\n  // const { isLoggedIn } = useSelector((state) => state.user); //구조분해 할당방법, 성능차이 쬐금 남\n\n\n  var _useinput = useinput(\"\"),\n      _useinput2 = _slicedToArray(_useinput, 2),\n      searchInput = _useinput2[0],\n      onChangeSearchInput = _useinput2[1];\n\n  var onSearch = useCallback(function () {\n    Router.push(\"/hashtag/\".concat(searchInput));\n  }, [searchInput]);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsx(Global, {}), /*#__PURE__*/_jsxs(Menu, {\n      mode: \"horizontal\",\n      children: [/*#__PURE__*/_jsx(Menu.Item, {\n        children: /*#__PURE__*/_jsx(Link, {\n          href: \"/\",\n          children: /*#__PURE__*/_jsx(\"a\", {\n            children: \"\\u30DB\\u30FC\\u30E0\\u753B\\u9762\"\n          })\n        })\n      }), /*#__PURE__*/_jsx(Menu.Item, {\n        children: /*#__PURE__*/_jsx(Link, {\n          href: \"/profile\",\n          children: /*#__PURE__*/_jsx(\"a\", {\n            children: \"\\u30D7\\u30ED\\u30D5\\u30A3\\u30FC\\u30EB\"\n          })\n        })\n      }), /*#__PURE__*/_jsx(Menu.Item, {\n        children: /*#__PURE__*/_jsx(SearchInput, {\n          enterButton: true,\n          value: searchInput,\n          onChange: onChangeSearchInput,\n          onSearch: onSearch\n        })\n      })]\n    }), /*#__PURE__*/_jsxs(Row, {\n      gutter: 8,\n      children: [/*#__PURE__*/_jsx(Col, {\n        xs: 24,\n        md: 6,\n        children: me ? /*#__PURE__*/_jsx(UserProfile, {}) : /*#__PURE__*/_jsx(LoginForm, {})\n      }), /*#__PURE__*/_jsx(Col, {\n        xs: 24,\n        md: 12,\n        children: children\n      }), /*#__PURE__*/_jsx(Col, {\n        xs: 24,\n        md: 6,\n        children: /*#__PURE__*/_jsx(\"a\", {\n          href: \"https://wngus6429.github.io/NewPortFolio/\",\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"\\u30DD\\u30FC\\u30C8\\u30D5\\u30A9\\u30EA\\u30AA\"\n        })\n      })]\n    })]\n  });\n};\n\nexport default AppLayout; // target=\"_blank\" rel=\"noopener noreferrer\" 보안관련","map":{"version":3,"sources":["C:/Users/wngus/Documents/GitHub/portfolio-japanese/prepare/front/components/AppLayout.js"],"names":["React","useCallback","Link","Menu","Input","Row","Col","styled","UserProfile","LoginForm","useSelector","Router","createGlobalStyle","TwitterOutlined","useinput","SearchInput","Search","Global","AppLayout","children","state","user","me","searchInput","onChangeSearchInput","onSearch","push"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC,C,CAA4C;;AAE5C,OAAOC,IAAP,MAAiB,WAAjB,C,CAA8B;;AAC9B,SAASC,IAAT,EAAeC,KAAf,EAAsBC,GAAtB,EAA2BC,GAA3B,QAAsC,MAAtC;AACA,OAAO,oBAAP;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B,C,CAA2C;;AAC3C,OAAOC,MAAP,MAAmB,aAAnB,C,CAAkC;;AAClC,SAASC,iBAAT,QAAkC,mBAAlC;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,IAAMC,WAAW,GAAGR,MAAM,CAACH,KAAK,CAACY,MAAP,CAAT;AAAA;AAAA;AAAA,8BAAjB,C,CAIA;;AACA,IAAMC,MAAM,GAAGL,iBAAH,mBAAZ;;AAaA,IAAMM,SAAS,GAAG,SAAZA,SAAY,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAClC;AADkC,qBAEnBT,WAAW,CAAC,UAACU,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAFQ;AAAA,MAE1BC,EAF0B,gBAE1BA,EAF0B,EAEiB;AACnD;;;AAHkC,kBAISR,QAAQ,CAAC,EAAD,CAJjB;AAAA;AAAA,MAI3BS,WAJ2B;AAAA,MAIdC,mBAJc;;AAMlC,MAAMC,QAAQ,GAAGxB,WAAW,CAAC,YAAM;AACjCU,IAAAA,MAAM,CAACe,IAAP,oBAAwBH,WAAxB;AACD,GAF2B,EAEzB,CAACA,WAAD,CAFyB,CAA5B;AAGA,sBACE;AAAA,4BACE,KAAC,MAAD,KADF,eAEE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,YAAX;AAAA,8BACE,KAAC,IAAD,CAAM,IAAN;AAAA,+BACE,KAAC,IAAD;AAAM,UAAA,IAAI,EAAC,GAAX;AAAA,iCACE;AAAA;AAAA;AADF;AADF,QADF,eAME,KAAC,IAAD,CAAM,IAAN;AAAA,+BACE,KAAC,IAAD;AAAM,UAAA,IAAI,EAAC,UAAX;AAAA,iCACE;AAAA;AAAA;AADF;AADF,QANF,eAWE,KAAC,IAAD,CAAM,IAAN;AAAA,+BACE,KAAC,WAAD;AAAa,UAAA,WAAW,MAAxB;AAAyB,UAAA,KAAK,EAAEA,WAAhC;AAA6C,UAAA,QAAQ,EAAEC,mBAAvD;AAA4E,UAAA,QAAQ,EAAEC;AAAtF;AADF,QAXF;AAAA,MAFF,eAiBE,MAAC,GAAD;AAAK,MAAA,MAAM,EAAE,CAAb;AAAA,8BACE,KAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAa,QAAA,EAAE,EAAE,CAAjB;AAAA,kBACGH,EAAE,gBAAG,KAAC,WAAD,KAAH,gBAAqB,KAAC,SAAD;AAD1B,QADF,eAIE,KAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAa,QAAA,EAAE,EAAE,EAAjB;AAAA,kBACGH;AADH,QAJF,eAOE,KAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAa,QAAA,EAAE,EAAE,CAAjB;AAAA,+BACE;AAAG,UAAA,IAAI,EAAC,2CAAR;AAAoD,UAAA,MAAM,EAAC,QAA3D;AAAoE,UAAA,GAAG,EAAC,qBAAxE;AAAA;AAAA;AADF,QAPF;AAAA,MAjBF;AAAA,IADF;AAiCD,CA1CD;;AAgDA,eAAeD,SAAf,C,CAEA","sourcesContent":["import React, { useCallback } from \"react\"; //없어도됨\r\nimport Proptypes from \"prop-types\";\r\nimport Link from \"next/link\"; //next 자체적 라우터\r\nimport { Menu, Input, Row, Col } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport styled from \"styled-components\";\r\nimport UserProfile from \"../components/UserProfile\";\r\nimport LoginForm from \"../components/LoginForm\";\r\nimport { useSelector } from \"react-redux\"; //리액트랑 리덕스 연결\r\nimport Router from \"next/router\"; //프로그래밍적으로 주소를 옮길떄는 router사용\r\nimport { createGlobalStyle } from \"styled-components\";\r\nimport { TwitterOutlined } from \"@ant-design/icons\";\r\nimport useinput from \"../hooks/useinput\";\r\n\r\nconst SearchInput = styled(Input.Search)`\r\n  vertical-align: middle;\r\n`;\r\n\r\n//gutter 같은거 넣어서 밑에 작은 스크롤이 생겨서 없앨려고\r\nconst Global = createGlobalStyle`\r\n.ant-row{\r\n  margin-left:0 !important;\r\n  margin-right:0 !important;\r\n}\r\n.ant-col:first-child{\r\n  padding-left:0 !important;\r\n}\r\n.ant-col:last-child{\r\n  padding-right:0 !important;\r\n}\r\n`;\r\n\r\nconst AppLayout = ({ children }) => {\r\n  //const [isLoggedIn, setIsLoggedIn] = useState(false); //리덕스가 있어서\r\n  const { me } = useSelector((state) => state.user); //isLoggedIn이 바뀌면 알아서 applayout이 리랜더링\r\n  // const { isLoggedIn } = useSelector((state) => state.user); //구조분해 할당방법, 성능차이 쬐금 남\r\n  const [searchInput, onChangeSearchInput] = useinput(\"\");\r\n\r\n  const onSearch = useCallback(() => {\r\n    Router.push(`/hashtag/${searchInput}`);\r\n  }, [searchInput]);\r\n  return (\r\n    <div>\r\n      <Global />\r\n      <Menu mode=\"horizontal\">\r\n        <Menu.Item>\r\n          <Link href=\"/\">\r\n            <a>ホーム画面</a>\r\n          </Link>\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n          <Link href=\"/profile\">\r\n            <a>プロフィール</a>\r\n          </Link>\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n          <SearchInput enterButton value={searchInput} onChange={onChangeSearchInput} onSearch={onSearch} />\r\n        </Menu.Item>\r\n      </Menu>\r\n      <Row gutter={8}>\r\n        <Col xs={24} md={6}>\r\n          {me ? <UserProfile /> : <LoginForm />}\r\n        </Col>\r\n        <Col xs={24} md={12}>\r\n          {children}\r\n        </Col>\r\n        <Col xs={24} md={6}>\r\n          <a href=\"https://wngus6429.github.io/NewPortFolio/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            ポートフォリオ\r\n          </a>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nAppLayout.propTypes = {\r\n  children: Proptypes.node.isRequired, //리액트의 node\r\n};\r\n\r\nexport default AppLayout;\r\n\r\n// target=\"_blank\" rel=\"noopener noreferrer\" 보안관련\r\n"]},"metadata":{},"sourceType":"module"}