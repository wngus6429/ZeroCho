{"ast":null,"code":"import { createWrapper } from \"next-redux-wrapper\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport reducer from \"../reducers\";\n\nconst configureStore = () => {\n  const middlewares = [];\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) : composeWithDevTools(applyMiddleware(...middlewares));\n  const store = createStore(reducer, enhancer);\n  store.dispatch({\n    type: 'CHANGE_NICKNAME',\n    data: 'boogicho'\n  });\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n}); //두번째는 옵션 객체, debug를 true로 하는게 개발할떄 편함\n\nexport default wrapper;","map":{"version":3,"sources":["C:/Users/wngus/Documents/GitHub/ZeroCho/nodebird/prepare/front/store/configureStore.js"],"names":["createWrapper","applyMiddleware","compose","createStore","composeWithDevTools","reducer","configureStore","middlewares","enhancer","store","dispatch","type","data","wrapper","debug"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAC3B,QAAMC,WAAW,GAAG,EAApB;AACA,QAAMC,QAAQ,GAAG,QACfN,OAAO,CAACD,eAAe,CAAC,GAAGM,WAAJ,CAAhB,CADQ,GAEfH,mBAAmB,CAACH,eAAe,CAAC,GAAGM,WAAJ,CAAhB,CAFrB;AAGA,QAAME,KAAK,GAAGN,WAAW,CAACE,OAAD,EAAUG,QAAV,CAAzB;AACAC,EAAAA,KAAK,CAACC,QAAN,CAAe;AACbC,IAAAA,IAAI,EAAE,iBADO;AAEbC,IAAAA,IAAI,EAAE;AAFO,GAAf;AAIA,SAAOH,KAAP;AACD,CAXD;;AAaA,MAAMI,OAAO,GAAGb,aAAa,CAACM,cAAD,EAAiB;AAC5CQ,EAAAA,KAAK;AADuC,CAAjB,CAA7B,C,CAGA;;AACA,eAAeD,OAAf","sourcesContent":["import { createWrapper } from \"next-redux-wrapper\";\r\nimport { applyMiddleware, compose, createStore } from \"redux\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\"\r\nimport reducer from \"../reducers\";\r\n\r\nconst configureStore = () => {\r\n  const middlewares = [];\r\n  const enhancer = process.env.NODE_ENV === \"production\"\r\n  ? compose(applyMiddleware(...middlewares))\r\n  : composeWithDevTools(applyMiddleware(...middlewares))\r\n  const store = createStore(reducer, enhancer);\r\n  store.dispatch({\r\n    type: 'CHANGE_NICKNAME',\r\n    data: 'boogicho',\r\n  });\r\n  return store;\r\n};\r\n\r\nconst wrapper = createWrapper(configureStore, {\r\n  debug: process.env.NODE_ENV === 'development',\r\n});\r\n//두번째는 옵션 객체, debug를 true로 하는게 개발할떄 편함\r\nexport default wrapper;\r\n"]},"metadata":{},"sourceType":"module"}