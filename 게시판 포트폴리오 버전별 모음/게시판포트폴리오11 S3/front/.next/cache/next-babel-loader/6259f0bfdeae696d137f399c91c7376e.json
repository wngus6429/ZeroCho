{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React, { useCallback } from \"react\";\nimport { Card, Avatar, Button } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logoutRequestAction } from \"../reducers/user\";\nimport Link from \"next/link\";\n\nvar UserProfile = function UserProfile() {\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me,\n      logOutLoading = _useSelector.logOutLoading;\n\n  var dispatch = useDispatch();\n  var onLogout = useCallback(function () {\n    dispatch(logoutRequestAction());\n  }, []);\n  return /*#__PURE__*/_jsxs(Card, {\n    actions: [/*#__PURE__*/_jsx(\"div\", {\n      children: /*#__PURE__*/_jsx(Link, {\n        href: \"/user/\".concat(me.id),\n        children: /*#__PURE__*/_jsxs(\"a\", {\n          children: [\"\\u6295\\u7A3F\", /*#__PURE__*/_jsx(\"br\", {}), me.Posts.length]\n        })\n      })\n    }, \"twit\"), /*#__PURE__*/_jsx(\"div\", {\n      children: /*#__PURE__*/_jsx(Link, {\n        href: \"/profile\",\n        children: /*#__PURE__*/_jsxs(\"a\", {\n          children: [\"Following\", /*#__PURE__*/_jsx(\"br\", {}), me.Followings.length]\n        })\n      })\n    }, \"followings\"), /*#__PURE__*/_jsx(\"div\", {\n      children: /*#__PURE__*/_jsx(Link, {\n        href: \"/profile\",\n        children: /*#__PURE__*/_jsxs(\"a\", {\n          children: [\"Follower\", /*#__PURE__*/_jsx(\"br\", {}), me.Followers.length]\n        })\n      })\n    }, \"followings\")],\n    children: [/*#__PURE__*/_jsx(Card.Meta, {\n      avatar: /*#__PURE__*/_jsx(Link, {\n        href: \"/user/\".concat(me.id),\n        children: /*#__PURE__*/_jsx(\"a\", {\n          children: /*#__PURE__*/_jsx(Avatar, {\n            children: me.nickname[0]\n          })\n        })\n      }),\n      title: me.nickname\n    }), /*#__PURE__*/_jsx(Button, {\n      onClick: onLogout,\n      loading: logOutLoading,\n      children: \"LogOut\"\n    })]\n  });\n};\n\nexport default UserProfile; //위에 actions 안에 내용이 배열이기 때문에 key를 붙여줘야함\n//배열로 jsx 쓸 때는 key를 붙여줘야함","map":{"version":3,"sources":["C:/Users/wngus/Documents/GitHub/portfolio-japanese/prepare/front/components/UserProfile.js"],"names":["React","useCallback","Card","Avatar","Button","useDispatch","useSelector","logoutRequestAction","Link","UserProfile","state","user","me","logOutLoading","dispatch","onLogout","id","Posts","length","Followings","Followers","nickname"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,MAAvB,QAAqC,MAArC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,mBAAT,QAAoC,kBAApC;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA,qBACMH,WAAW,CAAC,UAACI,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CADjB;AAAA,MAChBC,EADgB,gBAChBA,EADgB;AAAA,MACZC,aADY,gBACZA,aADY;;AAExB,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;AAEA,MAAMU,QAAQ,GAAGd,WAAW,CAAC,YAAM;AACjCa,IAAAA,QAAQ,CAACP,mBAAmB,EAApB,CAAR;AACD,GAF2B,EAEzB,EAFyB,CAA5B;AAIA,sBACE,MAAC,IAAD;AACE,IAAA,OAAO,EAAE,cACP;AAAA,6BACE,KAAC,IAAD;AAAM,QAAA,IAAI,kBAAWK,EAAE,CAACI,EAAd,CAAV;AAAA,+BACE;AAAA,kDAEE,cAFF,EAGGJ,EAAE,CAACK,KAAH,CAASC,MAHZ;AAAA;AADF;AADF,OAAS,MAAT,CADO,eAUP;AAAA,6BACE,KAAC,IAAD;AAAM,QAAA,IAAI,EAAC,UAAX;AAAA,+BACE;AAAA,+CAEE,cAFF,EAGGN,EAAE,CAACO,UAAH,CAAcD,MAHjB;AAAA;AADF;AADF,OAAS,YAAT,CAVO,eAmBP;AAAA,6BACE,KAAC,IAAD;AAAM,QAAA,IAAI,EAAC,UAAX;AAAA,+BACE;AAAA,8CAEE,cAFF,EAGGN,EAAE,CAACQ,SAAH,CAAaF,MAHhB;AAAA;AADF;AADF,OAAS,YAAT,CAnBO,CADX;AAAA,4BA+BE,KAAC,IAAD,CAAM,IAAN;AACE,MAAA,MAAM,eACJ,KAAC,IAAD;AAAM,QAAA,IAAI,kBAAWN,EAAE,CAACI,EAAd,CAAV;AAAA,+BACE;AAAA,iCACE,KAAC,MAAD;AAAA,sBAASJ,EAAE,CAACS,QAAH,CAAY,CAAZ;AAAT;AADF;AADF,QAFJ;AAQE,MAAA,KAAK,EAAET,EAAE,CAACS;AARZ,MA/BF,eAyCE,KAAC,MAAD;AAAQ,MAAA,OAAO,EAAEN,QAAjB;AAA2B,MAAA,OAAO,EAAEF,aAApC;AAAA;AAAA,MAzCF;AAAA,IADF;AA+CD,CAvDD;;AAyDA,eAAeJ,WAAf,C,CAEA;AACA","sourcesContent":["import React, { useCallback } from \"react\";\r\nimport { Card, Avatar, Button } from \"antd\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logoutRequestAction } from \"../reducers/user\";\r\nimport Link from \"next/link\";\r\n\r\nconst UserProfile = () => {\r\n  const { me, logOutLoading } = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n\r\n  const onLogout = useCallback(() => {\r\n    dispatch(logoutRequestAction());\r\n  }, []);\r\n\r\n  return (\r\n    <Card\r\n      actions={[\r\n        <div key=\"twit\">\r\n          <Link href={`/user/${me.id}`}>\r\n            <a>\r\n              投稿\r\n              <br />\r\n              {me.Posts.length}\r\n            </a>\r\n          </Link>\r\n        </div>,\r\n        <div key=\"followings\">\r\n          <Link href=\"/profile\">\r\n            <a>\r\n              Following\r\n              <br />\r\n              {me.Followings.length}\r\n            </a>\r\n          </Link>\r\n        </div>,\r\n        <div key=\"followings\">\r\n          <Link href=\"/profile\">\r\n            <a>\r\n              Follower\r\n              <br />\r\n              {me.Followers.length}\r\n            </a>\r\n          </Link>\r\n        </div>,\r\n      ]}\r\n    >\r\n      <Card.Meta\r\n        avatar={\r\n          <Link href={`/user/${me.id}`}>\r\n            <a>\r\n              <Avatar>{me.nickname[0]}</Avatar>\r\n            </a>\r\n          </Link>\r\n        }\r\n        title={me.nickname}\r\n      />\r\n      <Button onClick={onLogout} loading={logOutLoading}>\r\n        LogOut\r\n      </Button>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n\r\n//위에 actions 안에 내용이 배열이기 때문에 key를 붙여줘야함\r\n//배열로 jsx 쓸 때는 key를 붙여줘야함\r\n"]},"metadata":{},"sourceType":"module"}