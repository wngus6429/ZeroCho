{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\wngus\\\\Documents\\\\GitHub\\\\ZeroCho\\\\nodebird\\\\prepare\\\\front\\\\pages\\\\signup.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  color: red;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport AppLayout from \"../components/AppLayout\";\nimport { Form, Input, Checkbox, Button } from \"antd\";\nimport Head from \"next/head\";\nimport styled from \"styled-components\";\nimport useinput from \"../hooks/useinput\";\nimport { SIGN_UP_REQUEST } from \"../reducers/user\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport router from \"next/router\";\nvar ErrorMessage = styled.div(_templateObject());\n_c = ErrorMessage;\n\nvar Signup = function Signup() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      signUpLoading = _useSelector.signUpLoading,\n      signUpDone = _useSelector.signUpDone,\n      signUpError = _useSelector.signUpError,\n      me = _useSelector.me;\n\n  useEffect(function () {\n    if (me && me.id) {\n      router.replace(\"/\");\n    }\n  }, [me && me.id]);\n  useEffect(function () {\n    if (signUpDone) {\n      router.replace(\"/\"); //완료되면 메인페이지로\n    }\n  }, [signUpDone]);\n  useEffect(function () {\n    if (signUpError) {\n      alert(signUpError);\n    }\n  }, [signUpError]);\n\n  var _useinput = useinput(\"\"),\n      _useinput2 = _slicedToArray(_useinput, 2),\n      email = _useinput2[0],\n      onChangeEmail = _useinput2[1]; // const [Id, setId] = useState(\"\");\n  // const onChangeId = useCallback((e) => {\n  //   setId(e.target.value);\n  // }, []);\n\n\n  var _useinput3 = useinput(\"\"),\n      _useinput4 = _slicedToArray(_useinput3, 2),\n      nickname = _useinput4[0],\n      onChangeNickName = _useinput4[1]; // const [NickName, setNickName] = useState(\"\");\n  // const onChangeNickName = useCallback((e) => {\n  //   setNickName(e.target.value);\n  // }, []);\n\n\n  var _useinput5 = useinput(\"\"),\n      _useinput6 = _slicedToArray(_useinput5, 2),\n      password = _useinput6[0],\n      onChangePassword = _useinput6[1]; // const [Password, setPassword] = useState(\"\");\n  // const onChangePassword = useCallback((e) => {\n  //   setPassword(e.target.value);\n  // }, []);\n\n\n  var _useState = useState(false),\n      passwordError = _useState[0],\n      setPasswordError = _useState[1]; //비밀번호가 일치 하지 않으면 첫번쨰 true가 됨\n\n\n  var _useState2 = useState(\"\"),\n      passwordCheck = _useState2[0],\n      setPasswordCheck = _useState2[1];\n\n  var onChangePasswordCheck = useCallback(function (e) {\n    setPasswordCheck(e.target.value);\n    setPasswordError(e.target.value !== password);\n  }, [password]);\n\n  var _useState3 = useState(\"\"),\n      term = _useState3[0],\n      setTerm = _useState3[1];\n\n  var _useState4 = useState(false),\n      TermError = _useState4[0],\n      setTermError = _useState4[1];\n\n  var onChangeTerm = useCallback(function (e) {\n    setTerm(e.target.checked);\n    setTermError(false);\n  }, []);\n  var onsubmit = useCallback(function () {\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n\n    if (!term) {\n      return setTermError(true);\n    }\n\n    console.log(email, nickname, password);\n    dispatch({\n      type: SIGN_UP_REQUEST,\n      data: {\n        email: email,\n        password: password,\n        nickname: nickname\n      }\n    });\n  }, [email, password, passwordCheck, term]);\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Form, {\n      onFinish: onsubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"user-email\",\n          children: \"\\uC774\\uBA54\\uC77C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"user-email\",\n          type: \"email\",\n          value: email,\n          onChange: onChangeEmail,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"user-id\",\n          children: \"\\uB2C9\\uB124\\uC784\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"user-id\",\n          value: nickname,\n          onChange: onChangeNickName,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"user-password\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"user-password\",\n          type: \"password\",\n          value: password,\n          onChange: onChangePassword,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"user-password\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uCCB4\\uD06C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"user-password-check\",\n          type: \"password\",\n          value: passwordCheck,\n          onChange: onChangePasswordCheck,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, _this), passwordError && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 29\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          name: \"user-term\",\n          checked: term,\n          onChange: onChangeTerm,\n          children: \"\\uB0B4 \\uB9D0\\uC744 \\uC798 \\uB4E4\\uC744\\uAC83\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, _this), TermError && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          children: \" \\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758\\uD558\\uC154\\uC57C \\uD569\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 10\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          loading: signUpLoading,\n          children: \"\\uAC00\\uC785\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, _this);\n}; //서버사이드 랜더링 이부분이 알아서 home보다 먼저 실행됨. 그래야 데이터 먼저 채우고 화면이 렌더링\n//매개변수 context , 여긴 프론트서버에서 실행되는거임\n\n\n_s(Signup, \"4a+DPSKhrHoOdtY6JSGFoFR+Oyc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c2 = Signup;\n//서버사이드랜더링이 request가 success될떄까지 기다려주는거\nexport var __N_SSP = true;\nexport default Signup; //TermError는 제출할때 true가 됨\n//Button type=\"primary\"\n//htmlType=\"submit\" 할시 위에 onFinish가 호출됨. e.preventDefault() 내장 되어 있어서 안해도됨\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ErrorMessage\");\n$RefreshReg$(_c2, \"Signup\");","map":{"version":3,"sources":["C:/Users/wngus/Documents/GitHub/ZeroCho/nodebird/prepare/front/pages/signup.js"],"names":["React","useCallback","useEffect","useState","AppLayout","Form","Input","Checkbox","Button","Head","styled","useinput","SIGN_UP_REQUEST","useDispatch","useSelector","router","ErrorMessage","div","Signup","dispatch","state","user","signUpLoading","signUpDone","signUpError","me","id","replace","alert","email","onChangeEmail","nickname","onChangeNickName","password","onChangePassword","passwordError","setPasswordError","passwordCheck","setPasswordCheck","onChangePasswordCheck","e","target","value","term","setTerm","TermError","setTermError","onChangeTerm","checked","onsubmit","console","log","type","data","marginTop"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\r\nimport AppLayout from \"../components/AppLayout\";\r\nimport { Form, Input, Checkbox, Button } from \"antd\";\r\nimport Head from \"next/head\";\r\nimport styled from \"styled-components\";\r\nimport useinput from \"../hooks/useinput\";\r\nimport { SIGN_UP_REQUEST, LOAD_MY_INFO_REQUEST } from \"../reducers/user\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport router from \"next/router\";\r\nimport { END } from \"redux-saga\";\r\nimport axios from \"axios\";\r\nimport wrapper from \"../store/configureStore\";\r\n\r\nconst ErrorMessage = styled.div`\r\n  color: red;\r\n`;\r\n\r\nconst Signup = () => {\r\n  const dispatch = useDispatch();\r\n  const { signUpLoading, signUpDone, signUpError, me } = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    if (me && me.id) {\r\n      router.replace(\"/\");\r\n    }\r\n  }, [me && me.id]);\r\n\r\n  useEffect(() => {\r\n    if (signUpDone) {\r\n      router.replace(\"/\"); //완료되면 메인페이지로\r\n    }\r\n  }, [signUpDone]);\r\n\r\n  useEffect(() => {\r\n    if (signUpError) {\r\n      alert(signUpError);\r\n    }\r\n  }, [signUpError]);\r\n\r\n  const [email, onChangeEmail] = useinput(\"\");\r\n  // const [Id, setId] = useState(\"\");\r\n  // const onChangeId = useCallback((e) => {\r\n  //   setId(e.target.value);\r\n  // }, []);\r\n  const [nickname, onChangeNickName] = useinput(\"\");\r\n  // const [NickName, setNickName] = useState(\"\");\r\n  // const onChangeNickName = useCallback((e) => {\r\n  //   setNickName(e.target.value);\r\n  // }, []);\r\n  const [password, onChangePassword] = useinput(\"\");\r\n  // const [Password, setPassword] = useState(\"\");\r\n  // const onChangePassword = useCallback((e) => {\r\n  //   setPassword(e.target.value);\r\n  // }, []);\r\n  const [passwordError, setPasswordError] = useState(false); //비밀번호가 일치 하지 않으면 첫번쨰 true가 됨\r\n  const [passwordCheck, setPasswordCheck] = useState(\"\");\r\n  const onChangePasswordCheck = useCallback(\r\n    (e) => {\r\n      setPasswordCheck(e.target.value);\r\n      setPasswordError(e.target.value !== password);\r\n    },\r\n    [password]\r\n  );\r\n  const [term, setTerm] = useState(\"\");\r\n  const [TermError, setTermError] = useState(false);\r\n  const onChangeTerm = useCallback((e) => {\r\n    setTerm(e.target.checked);\r\n    setTermError(false);\r\n  }, []);\r\n\r\n  const onsubmit = useCallback(() => {\r\n    if (password !== passwordCheck) {\r\n      return setPasswordError(true);\r\n    }\r\n    if (!term) {\r\n      return setTermError(true);\r\n    }\r\n    console.log(email, nickname, password);\r\n    dispatch({\r\n      type: SIGN_UP_REQUEST,\r\n      data: { email, password, nickname },\r\n    });\r\n  }, [email, password, passwordCheck, term]);\r\n  return (\r\n    <AppLayout>\r\n      <Head>\r\n        <title>회원가입</title>\r\n      </Head>\r\n      <Form onFinish={onsubmit}>\r\n        <div>\r\n          <label htmlFor=\"user-email\">이메일</label>\r\n          <br />\r\n          <Input name=\"user-email\" type=\"email\" value={email} onChange={onChangeEmail} required />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"user-id\">닉네임</label>\r\n          <br />\r\n          <Input name=\"user-id\" value={nickname} onChange={onChangeNickName} required />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"user-password\">비밀번호</label>\r\n          <br />\r\n          <Input name=\"user-password\" type=\"password\" value={password} onChange={onChangePassword} required />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"user-password\">비밀번호 체크</label>\r\n          <br />\r\n          <Input\r\n            name=\"user-password-check\"\r\n            type=\"password\"\r\n            value={passwordCheck}\r\n            onChange={onChangePasswordCheck}\r\n            required\r\n          />\r\n          {passwordError && <ErrorMessage>비밀번호가 일치하지 않습니다.</ErrorMessage>}\r\n        </div>\r\n        <div>\r\n          <Checkbox name=\"user-term\" checked={term} onChange={onChangeTerm}>\r\n            내 말을 잘 들을것\r\n          </Checkbox>\r\n          {TermError && <ErrorMessage> 약관에 동의하셔야 합니다.</ErrorMessage>}\r\n        </div>\r\n        <div style={{ marginTop: 10 }}>\r\n          <Button type=\"primary\" htmlType=\"submit\" loading={signUpLoading}>\r\n            가입하기\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\n//서버사이드 랜더링 이부분이 알아서 home보다 먼저 실행됨. 그래야 데이터 먼저 채우고 화면이 렌더링\r\n//매개변수 context , 여긴 프론트서버에서 실행되는거임\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  console.log(\"getServerSideProps start\");\r\n  console.log(\"context\", context);\r\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n  const cookie = context.req ? context.req.headers.cookie : \"\"; //이걸 해야 서버쪽으로 쿠키가 전달이됨\r\n  axios.defaults.headers.Cookie = \"\"; //이걸 해야 서버쪽으로 쿠키가 전달이됨\r\n  if (context.req && cookie) {\r\n    //서버일때랑 쿠키가 있을때 , 이런게 아니면 위에 \"\" //이렇게 안하면 서버에서 쿠키가 공유되서 다른사람이 내 아이디로 로그인되는\r\n    axios.defaults.headers.Cookie = cookie;\r\n  } //저희가 실제로 쿠키를 써서 요청을 보낼때만 잠깐 쿠키를 넣어놧다가 쿠키를 안써서 요청보낼때는 서버에서 공유하고 있는 쿠키를 제거하는 이부분이 제일 중요\r\n  ////////////////////////////////////////////////////////////////////////////////////////\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  context.store.dispatch(END); //next redux wrapper에 이렇게 하라고 적혀있음\r\n  await context.store.sagaTask.toPromise(); //이거는 configurestore에. sagaTask등록한거\r\n}); //서버사이드랜더링이 request가 success될떄까지 기다려주는거\r\n\r\nexport default Signup;\r\n\r\n//TermError는 제출할때 true가 됨\r\n//Button type=\"primary\"\r\n//htmlType=\"submit\" 할시 위에 onFinish가 호출됨. e.preventDefault() 내장 되어 있어서 안해도됨\r\n"]},"metadata":{},"sourceType":"module"}