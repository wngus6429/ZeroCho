{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button, Card, Popover, Avatar, List, Comment } from \"antd\";\nimport { RetweetOutlined, HeartOutlined, HeartTwoTone, MessageOutlined, EllipsisOutlined } from \"@ant-design/icons\";\nimport PostImages from \"./PostImages\";\nimport CommentForm from \"./CommentForm\";\nimport PostCardContent from \"./PostCardContent\";\nimport Link from \"next/link\";\nimport moment from \"moment\";\nimport { LIKE_POST_REQUEST, REMOVE_POST_REQUEST, UNLIKE_POST_REQUEST, RETWEET_REQUEST } from \"../reducers/post\";\nimport FollowButton from \"./FollowButton\";\nmoment.locale(\"ko\"); //한글로 바꿔줌\n\nvar PostCard = function PostCard(_ref) {\n  var post = _ref.post;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      removePostLoading = _useSelector.removePostLoading,\n      retweetError = _useSelector.retweetError;\n\n  var _useState = useState(false),\n      commentFormOpened = _useState[0],\n      setcommentFormOpened = _useState[1];\n\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  }); //me.id가 있으면 그 데이터가 들어가고 없으면 undefined\n  //옵셔널 체이닝 연산자라고 한다. optional chaining\n\n  var onLike = useCallback(function () {\n    if (!id) {\n      return alert(\"ログインが必要です。\");\n    }\n\n    return dispatch({\n      type: LIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, [id]);\n  var onUnlike = useCallback(function () {\n    if (!id) {\n      return alert(\"ログインが必要です。\");\n    }\n\n    return dispatch({\n      type: UNLIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, [id]);\n  var onRemovePost = useCallback(function () {\n    if (!id) {\n      return alert(\"ログインが必要です。\");\n    }\n\n    return dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  }, [id]);\n  var onToggleComment = useCallback(function () {\n    setcommentFormOpened(function (prev) {\n      return !prev;\n    }); //이렇게 하면 true는 false로 false는 true로 함\n  }, []);\n  var onRetweet = useCallback(function () {\n    if (!id) {\n      return alert(\"ログインが必要です。\");\n    }\n\n    return dispatch({\n      type: RETWEET_REQUEST,\n      data: post.id\n    });\n  }, [id]);\n  var liked = post.Likers.find(function (v) {\n    return v.id === id;\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    children: [/*#__PURE__*/_jsx(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsx(PostImages, {\n        images: post.Images\n      }),\n      actions: [/*#__PURE__*/_jsx(RetweetOutlined, {\n        onClick: onRetweet\n      }, \"retweet\"), liked ? /*#__PURE__*/_jsx(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onUnlike\n      }, \"heart\") : /*#__PURE__*/_jsx(HeartOutlined, {\n        onClick: onLike\n      }, \"heart\"), /*#__PURE__*/_jsx(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"comment\"), /*#__PURE__*/_jsx(Popover, {\n        content: /*#__PURE__*/_jsx(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxs(_Fragment, {\n            children: [/*#__PURE__*/_jsx(Button, {\n              children: \"\\u4FEE\\u6B63\"\n            }), /*#__PURE__*/_jsx(Button, {\n              type: \"danger\",\n              loading: removePostLoading,\n              onClick: onRemovePost,\n              children: \"\\u524A\\u9664\"\n            })]\n          }) : /*#__PURE__*/_jsx(Button, {\n            children: \"\\u7533\\u544A\"\n          })\n        }),\n        children: /*#__PURE__*/_jsx(EllipsisOutlined, {})\n      }, \"more\")],\n      title: post.RetweetId ? \"\".concat(post.User.nickname, \"\\u69D8\\u304CRetweet\\u3057\\u307E\\u3057\\u305F\\u3002\") : null,\n      extra: id && /*#__PURE__*/_jsx(FollowButton, {\n        post: post\n      }),\n      children: post.RetweetId && post.Retweent ? /*#__PURE__*/_jsxs(Card, {\n        cover: post.Retweet.Images[0] && /*#__PURE__*/_jsx(PostImages, {\n          images: post.Retweet.Images\n        }),\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          style: {\n            \"float\": \"right\"\n          },\n          children: moment(post.createdAt).format(\"YYYY.MM.DD\")\n        }), /*#__PURE__*/_jsx(Card.Meta, {\n          avatar: /*#__PURE__*/_jsx(Link, {\n            href: \"/user/\".concat(post.Retweet.User.id),\n            children: /*#__PURE__*/_jsx(\"a\", {\n              children: /*#__PURE__*/_jsx(Avatar, {\n                children: post.Retweet.User.nickname[0]\n              })\n            })\n          }),\n          title: post.Retweet.User.nickname // description={post.content}\n          ,\n          description: /*#__PURE__*/_jsx(PostCardContent, {\n            postData: post.Retweet.content\n          })\n        })]\n      }) : /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          style: {\n            \"float\": \"right\"\n          },\n          children: moment(post.createdAt).format(\"YYYY.MM.DD\")\n        }), /*#__PURE__*/_jsx(Card.Meta, {\n          avatar:\n          /*#__PURE__*/\n          //아바타누르면 그 사람이 쓴 글 볼수 있게\n          _jsx(Link, {\n            href: \"/user/\".concat(post.User.id),\n            children: /*#__PURE__*/_jsx(\"a\", {\n              children: /*#__PURE__*/_jsx(Avatar, {\n                children: post.User.nickname[0]\n              })\n            })\n          }),\n          title: post.User.nickname // description={post.content}\n          ,\n          description: /*#__PURE__*/_jsx(PostCardContent, {\n            postData: post.content\n          })\n        })]\n      })\n    }), commentFormOpened && /*#__PURE__*/_jsxs(\"div\", {\n      children: [/*#__PURE__*/_jsx(CommentForm, {\n        post: post\n      }), /*#__PURE__*/_jsx(List, {\n        header: \"\".concat(post.Comments.length, \"\\u500B\\u306E \\u30B3\\u30E1\\u30F3\\u30C8\"),\n        itemLayout: \"horizontal\",\n        dataSource: post.Comments,\n        renderItem: function renderItem(item) {\n          return /*#__PURE__*/_jsx(\"li\", {\n            children: /*#__PURE__*/_jsx(Comment, {\n              author: item.User.nickname,\n              avatar: /*#__PURE__*/_jsx(Link, {\n                href: \"/user/\".concat(item.User.id),\n                children: /*#__PURE__*/_jsx(\"a\", {\n                  children: /*#__PURE__*/_jsx(Avatar, {\n                    children: item.User.nickname[0]\n                  })\n                })\n              }),\n              content: item.content\n            })\n          });\n        }\n      })]\n    })]\n  });\n};\n\nexport default PostCard;","map":null,"metadata":{},"sourceType":"module"}