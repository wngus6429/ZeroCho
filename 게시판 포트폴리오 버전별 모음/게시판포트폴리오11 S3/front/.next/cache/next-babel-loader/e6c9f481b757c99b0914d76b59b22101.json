{"ast":null,"code":"export const initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: \"제로초\"\n    },\n    content: \"첫번째 게시글 #해시태그, #익스프레스\",\n    Image: [{\n      src: \"https://www.ilbe.com\"\n    }, {\n      src: \"https://www.naver.com\"\n    }],\n    Comments: [{\n      User: {\n        nickname: \"nero\"\n      },\n      content: \"우와 개정판이 나왔군요\"\n    }, {\n      User: {\n        nickname: \"hero\"\n      },\n      content: \"얼른 사고싶어요\"\n    }]\n  }],\n  imagePaths: [],\n  //이미지 경로들\n  postAdded: false\n}; //왜 User, Image, Comment만 첫글자에 대문자냐? db에서 쓰는 시퀄라이즈랑 관계있는데.어떤 정보와 다른 정보가 관게가 있으면 그것을 합쳐줌\n//합쳐준 애들은 대문자가 되기 때문 , id나 content는 게시글 속성이고\n//미리 서버 개발자한테 물어보는게 좋지\n\nconst ADD_POST = \"ADD_POST\"; //이렇게 빼주면 좋은점이 밑에 ,case ADD_POST처럼 const값을 재활용 할수 있음\n//그리고 변수 선언으로 인해 오타 방지\n\nexport const addPost = {\n  type: ADD_POST\n};\nconst dummyPost = {\n  id: 2,\n  content: \"더미데이터입니다.\",\n  User: {\n    id: 1,\n    nickname: \"제로초\"\n  },\n  Images: [],\n  Comments: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/wngus/Documents/GitHub/ZeroCho/nodebird/prepare/front/reducers/post.js"],"names":["initialState","mainPosts","id","User","nickname","content","Image","src","Comments","imagePaths","postAdded","ADD_POST","addPost","type","dummyPost","Images","reducer","state","action"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG;AAC1BC,EAAAA,SAAS,EAAE,CACT;AACEC,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE;AACJD,MAAAA,EAAE,EAAE,CADA;AAEJE,MAAAA,QAAQ,EAAE;AAFN,KAFR;AAMEC,IAAAA,OAAO,EAAE,uBANX;AAOEC,IAAAA,KAAK,EAAE,CACL;AACEC,MAAAA,GAAG,EAAE;AADP,KADK,EAIL;AACEA,MAAAA,GAAG,EAAE;AADP,KAJK,CAPT;AAeEC,IAAAA,QAAQ,EAAE,CACR;AACEL,MAAAA,IAAI,EAAE;AACJC,QAAAA,QAAQ,EAAE;AADN,OADR;AAIEC,MAAAA,OAAO,EAAE;AAJX,KADQ,EAOR;AACEF,MAAAA,IAAI,EAAE;AACJC,QAAAA,QAAQ,EAAE;AADN,OADR;AAIEC,MAAAA,OAAO,EAAE;AAJX,KAPQ;AAfZ,GADS,CADe;AAiC1BI,EAAAA,UAAU,EAAE,EAjCc;AAiCV;AAChBC,EAAAA,SAAS,EAAE;AAlCe,CAArB,C,CAoCP;AACA;AACA;;AAEA,MAAMC,QAAQ,GAAG,UAAjB,C,CACA;AACA;;AACA,OAAO,MAAMC,OAAO,GAAG;AACrBC,EAAAA,IAAI,EAAEF;AADe,CAAhB;AAIP,MAAMG,SAAS,GAAG;AAChBZ,EAAAA,EAAE,EAAE,CADY;AAEhBG,EAAAA,OAAO,EAAE,WAFO;AAGhBF,EAAAA,IAAI,EAAE;AACJD,IAAAA,EAAE,EAAE,CADA;AAEJE,IAAAA,QAAQ,EAAE;AAFN,GAHU;AAOhBW,EAAAA,MAAM,EAAE,EAPQ;AAQhBP,EAAAA,QAAQ,EAAE;AARM,CAAlB;;AAWA,MAAMQ,OAAO,GAAG,CAACC,KAAK,GAAGjB,YAAT,EAAuBkB,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACL,IAAf;AACE,SAAKF,QAAL;AACA;AACE,aAAOM,KAAP;AAHJ;AAKD,CAND;;AAQA,eAAeD,OAAf","sourcesContent":["export const initialState = {\r\n  mainPosts: [\r\n    {\r\n      id: 1,\r\n      User: {\r\n        id: 1,\r\n        nickname: \"제로초\",\r\n      },\r\n      content: \"첫번째 게시글 #해시태그, #익스프레스\",\r\n      Image: [\r\n        {\r\n          src: \"https://www.ilbe.com\",\r\n        },\r\n        {\r\n          src: \"https://www.naver.com\",\r\n        },\r\n      ],\r\n      Comments: [\r\n        {\r\n          User: {\r\n            nickname: \"nero\",\r\n          },\r\n          content: \"우와 개정판이 나왔군요\",\r\n        },\r\n        {\r\n          User: {\r\n            nickname: \"hero\",\r\n          },\r\n          content: \"얼른 사고싶어요\",\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  imagePaths: [], //이미지 경로들\r\n  postAdded: false,\r\n};\r\n//왜 User, Image, Comment만 첫글자에 대문자냐? db에서 쓰는 시퀄라이즈랑 관계있는데.어떤 정보와 다른 정보가 관게가 있으면 그것을 합쳐줌\r\n//합쳐준 애들은 대문자가 되기 때문 , id나 content는 게시글 속성이고\r\n//미리 서버 개발자한테 물어보는게 좋지\r\n\r\nconst ADD_POST = \"ADD_POST\";\r\n//이렇게 빼주면 좋은점이 밑에 ,case ADD_POST처럼 const값을 재활용 할수 있음\r\n//그리고 변수 선언으로 인해 오타 방지\r\nexport const addPost = {\r\n  type: ADD_POST,\r\n};\r\n\r\nconst dummyPost = {\r\n  id: 2,\r\n  content: \"더미데이터입니다.\",\r\n  User: {\r\n    id: 1,\r\n    nickname: \"제로초\",\r\n  },\r\n  Images: [],\r\n  Comments: [],\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST:\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}