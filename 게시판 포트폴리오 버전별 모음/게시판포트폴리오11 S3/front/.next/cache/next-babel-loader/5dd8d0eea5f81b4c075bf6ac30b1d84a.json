{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\wngus\\\\Documents\\\\GitHub\\\\ZeroCho\\\\nodebird\\\\prepare\\\\front\\\\pages\\\\hashtag\\\\[tag].js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useRouter } from \"next/router\";\nimport { LOAD_HASHTAG_POSTS_REQUEST } from \"../../reducers/post\";\nimport PostCard from \"../../components/PostCard\";\nimport AppLayout from \"../../components/AppLayout\"; // hashtag/[tag]\n\nvar Hashtag = function Hashtag() {\n  _s();\n\n  var dispatch = useDispatch();\n  var router = useRouter();\n  var tag = router.query.tag;\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector.mainPosts,\n      hasMorePosts = _useSelector.hasMorePosts,\n      loadPostsLoading = _useSelector.loadPostsLoading;\n\n  useEffect(function () {\n    var onScroll = function onScroll() {\n      if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePosts && !loadPostsLoading) {\n          dispatch({\n            type: LOAD_HASHTAG_POSTS_REQUEST,\n            lastId: mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id,\n            data: tag\n          });\n        }\n      }\n    };\n\n    window.addEventListener(\"scroll\", onScroll);\n    return function () {\n      window.removeEventListener(\"scroll\", onScroll);\n    };\n  }, [mainPosts.length, hasMorePosts, tag, loadPostsLoading]);\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: mainPosts.map(function (c) {\n      return /*#__PURE__*/_jsxDEV(PostCard, {\n        post: c\n      }, c.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, _this);\n}; //og 이런게 카톡이나, 페북이런데 올리면, 미리보기 같은거임\n\n\n_s(Hashtag, \"XuihQYDxbCMqODN9amCxLo+UGrs=\", false, function () {\n  return [useDispatch, useRouter, useSelector];\n});\n\n_c = Hashtag;\n//겟스타틱, 겟프롭스안에서는 context.params.id 또는 context.query.id하면 위에 userrouter에 똑같이 접근가능.\nexport var __N_SSP = true;\nexport default Hashtag;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hashtag\");","map":{"version":3,"sources":["C:/Users/wngus/Documents/GitHub/ZeroCho/nodebird/prepare/front/pages/hashtag/[tag].js"],"names":["React","useEffect","useDispatch","useSelector","useRouter","LOAD_HASHTAG_POSTS_REQUEST","PostCard","AppLayout","Hashtag","dispatch","router","tag","query","state","post","mainPosts","hasMorePosts","loadPostsLoading","onScroll","window","pageYOffset","document","documentElement","clientHeight","scrollHeight","type","lastId","length","id","data","addEventListener","removeEventListener","map","c"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,aAA1B;AAGA,SAASC,0BAAT,QAA2C,qBAA3C;AACA,OAAOC,QAAP,MAAqB,2BAArB;AAGA,OAAOC,SAAP,MAAsB,4BAAtB,C,CACA;;AACA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AACpB,MAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,MAAMQ,MAAM,GAAGN,SAAS,EAAxB;AAFoB,MAGZO,GAHY,GAGJD,MAAM,CAACE,KAHH,CAGZD,GAHY;;AAAA,qBAIkCR,WAAW,CAAC,UAACU,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAJ7C;AAAA,MAIZC,SAJY,gBAIZA,SAJY;AAAA,MAIDC,YAJC,gBAIDA,YAJC;AAAA,MAIaC,gBAJb,gBAIaA,gBAJb;;AAMpBhB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMiB,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,UACEC,MAAM,CAACC,WAAP,GAAqBC,QAAQ,CAACC,eAAT,CAAyBC,YAA9C,GACAF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAF1C,EAGE;AACA,YAAIR,YAAY,IAAI,CAACC,gBAArB,EAAuC;AACrCR,UAAAA,QAAQ,CAAC;AACPgB,YAAAA,IAAI,EAAEpB,0BADC;AAEPqB,YAAAA,MAAM,EAAEX,SAAS,CAACA,SAAS,CAACY,MAAV,GAAmB,CAApB,CAAT,IAAmCZ,SAAS,CAACA,SAAS,CAACY,MAAV,GAAmB,CAApB,CAAT,CAAgCC,EAFpE;AAGPC,YAAAA,IAAI,EAAElB;AAHC,WAAD,CAAR;AAKD;AACF;AACF,KAbD;;AAcAQ,IAAAA,MAAM,CAACW,gBAAP,CAAwB,QAAxB,EAAkCZ,QAAlC;AACA,WAAO,YAAM;AACXC,MAAAA,MAAM,CAACY,mBAAP,CAA2B,QAA3B,EAAqCb,QAArC;AACD,KAFD;AAGD,GAnBQ,EAmBN,CAACH,SAAS,CAACY,MAAX,EAAmBX,YAAnB,EAAiCL,GAAjC,EAAsCM,gBAAtC,CAnBM,CAAT;AAqBA,sBACE,QAAC,SAAD;AAAA,cACGF,SAAS,CAACiB,GAAV,CAAc,UAACC,CAAD;AAAA,0BACb,QAAC,QAAD;AAAqB,QAAA,IAAI,EAAEA;AAA3B,SAAeA,CAAC,CAACL,EAAjB;AAAA;AAAA;AAAA;AAAA,eADa;AAAA,KAAd;AADH;AAAA;AAAA;AAAA;AAAA,WADF;AAOD,CAlCD,C,CAmCA;;;GAnCMpB,O;UACaN,W,EACFE,S,EAEuCD,W;;;KAJlDK,O;AAyDN;;AAEA,eAAeA,OAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useRouter } from \"next/router\";\r\nimport { END } from \"redux-saga\";\r\nimport axios from \"axios\";\r\nimport { LOAD_HASHTAG_POSTS_REQUEST } from \"../../reducers/post\";\r\nimport PostCard from \"../../components/PostCard\";\r\nimport wrapper from \"../../store/configureStore\";\r\nimport { LOAD_MY_INFO_REQUEST } from \"../../reducers/user\";\r\nimport AppLayout from \"../../components/AppLayout\";\r\n// hashtag/[tag]\r\nconst Hashtag = () => {\r\n  const dispatch = useDispatch();\r\n  const router = useRouter();\r\n  const { tag } = router.query;\r\n  const { mainPosts, hasMorePosts, loadPostsLoading } = useSelector((state) => state.post);\r\n\r\n  useEffect(() => {\r\n    const onScroll = () => {\r\n      if (\r\n        window.pageYOffset + document.documentElement.clientHeight >\r\n        document.documentElement.scrollHeight - 300\r\n      ) {\r\n        if (hasMorePosts && !loadPostsLoading) {\r\n          dispatch({\r\n            type: LOAD_HASHTAG_POSTS_REQUEST,\r\n            lastId: mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id,\r\n            data: tag,\r\n          });\r\n        }\r\n      }\r\n    };\r\n    window.addEventListener(\"scroll\", onScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", onScroll);\r\n    };\r\n  }, [mainPosts.length, hasMorePosts, tag, loadPostsLoading]);\r\n\r\n  return (\r\n    <AppLayout>\r\n      {mainPosts.map((c) => (\r\n        <PostCard key={c.id} post={c} />\r\n      ))}\r\n    </AppLayout>\r\n  );\r\n};\r\n//og 이런게 카톡이나, 페북이런데 올리면, 미리보기 같은거임\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  console.log(\"getServerSideProps start\");\r\n  console.log(\"context\", context);\r\n  const cookie = context.req ? context.req.headers.cookie : \"\";\r\n  console.log(context);\r\n  axios.defaults.headers.Cookie = \"\";\r\n  if (context.req && cookie) {\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_HASHTAG_POSTS_REQUEST,\r\n    data: context.params.tag,\r\n  });\r\n  context.store.dispatch(END); //next redux wrapper에 이렇게 하라고 적혀있음\r\n  await context.store.sagaTask.toPromise(); //이거는 configurestore에. sagaTask등록한거\r\n});\r\n\r\n//겟스타틱, 겟프롭스안에서는 context.params.id 또는 context.query.id하면 위에 userrouter에 똑같이 접근가능.\r\n\r\nexport default Hashtag;\r\n"]},"metadata":{},"sourceType":"module"}