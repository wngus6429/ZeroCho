{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\wngus\\\\Documents\\\\GitHub\\\\ZeroCho\\\\nodebird\\\\prepare\\\\front\\\\components\\\\CommentForm.js\";\nimport React, { useCallback } from \"react\"; //게시글의 id를 애가 받아야함\n\nimport { Form, Input, Button } from \"antd\";\nimport { useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport useinput from \"../hooks/useinput\";\nimport { ADD_COMMENT_REQUEST } from \"../reducers/post\";\n\nconst CommentForm = ({\n  post\n}) => {\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  }); //로그인 안했으면 me가 없기 때문에 없는 경우를 대비해줘야한다\n\n  const {\n    addCommentDone\n  } = useSelector(state => state.post);\n  const [CommentText, onChangeCommentText] = useinput(\"\");\n  useEffect(() => {\n    if (addCommentDone) {\n      setCommentText(\"\");\n    }\n  }, [addCommentDone]);\n  const onSubmitComment = useCallback(() => {\n    console.log(post.id, CommentText);\n    dispatchEvent({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: CommentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [CommentText, id]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmitComment,\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      style: {\n        position: \"relative\",\n        margin: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        value: CommentText,\n        onChange: onChangeCommentText,\n        rows: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          position: \"absolute\",\n          right: 0,\n          bottom: -37\n        },\n        type: \"danger\",\n        htmlType: \"submit\",\n        children: \"\\uC090\\uC57D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;","map":{"version":3,"sources":["C:/Users/wngus/Documents/GitHub/ZeroCho/nodebird/prepare/front/components/CommentForm.js"],"names":["React","useCallback","Form","Input","Button","useSelector","PropTypes","useinput","ADD_COMMENT_REQUEST","CommentForm","post","id","state","user","me","addCommentDone","CommentText","onChangeCommentText","useEffect","setCommentText","onSubmitComment","console","log","dispatchEvent","type","data","content","postId","userId","position","margin","right","bottom","propTypes","object","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC,C,CACA;;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,mBAAT,QAAoC,kBAApC;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAChC,QAAMC,EAAE,GAAGN,WAAW,CAAEO,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeH,EAA1B;AAAA,GAAD,CAAtB,CADgC,CACsB;;AACtD,QAAM;AAAEI,IAAAA;AAAF,MAAqBV,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACF,IAAlB,CAAtC;AACA,QAAM,CAACM,WAAD,EAAcC,mBAAd,IAAqCV,QAAQ,CAAC,EAAD,CAAnD;AAEAW,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIH,cAAJ,EAAoB;AAClBI,MAAAA,cAAc,CAAC,EAAD,CAAd;AACD;AACF,GAJQ,EAIN,CAACJ,cAAD,CAJM,CAAT;AAMA,QAAMK,eAAe,GAAGnB,WAAW,CAAC,MAAM;AACxCoB,IAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAI,CAACC,EAAjB,EAAqBK,WAArB;AACAO,IAAAA,aAAa,CAAC;AACZC,MAAAA,IAAI,EAAEhB,mBADM;AAEZiB,MAAAA,IAAI,EAAE;AAAEC,QAAAA,OAAO,EAAEV,WAAX;AAAwBW,QAAAA,MAAM,EAAEjB,IAAI,CAACC,EAArC;AAAyCiB,QAAAA,MAAM,EAAEjB;AAAjD;AAFM,KAAD,CAAb;AAID,GANkC,EAMhC,CAACK,WAAD,EAAcL,EAAd,CANgC,CAAnC;AAOA,sBACE,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAES,eAAhB;AAAA,2BACE,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAES,QAAAA,QAAQ,EAAE,UAAZ;AAAwBC,QAAAA,MAAM,EAAE;AAAhC,OAAlB;AAAA,8BACE,QAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,KAAK,EAAEd,WAAvB;AAAoC,QAAA,QAAQ,EAAEC,mBAA9C;AAAmE,QAAA,IAAI,EAAE;AAAzE;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAE;AAAEY,UAAAA,QAAQ,EAAE,UAAZ;AAAwBE,UAAAA,KAAK,EAAE,CAA/B;AAAkCC,UAAAA,MAAM,EAAE,CAAC;AAA3C,SAAf;AAAgE,QAAA,IAAI,EAAC,QAArE;AAA8E,QAAA,QAAQ,EAAC,QAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA5BD;;AA8BAvB,WAAW,CAACwB,SAAZ,GAAwB;AACtBvB,EAAAA,IAAI,EAAEJ,SAAS,CAAC4B,MAAV,CAAiBC;AADD,CAAxB;AAIA,eAAe1B,WAAf","sourcesContent":["import React, { useCallback } from \"react\";\r\n//게시글의 id를 애가 받아야함\r\nimport { Form, Input, Button } from \"antd\";\r\nimport { useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport useinput from \"../hooks/useinput\";\r\nimport { ADD_COMMENT_REQUEST } from \"../reducers/post\";\r\n\r\nconst CommentForm = ({ post }) => {\r\n  const id = useSelector((state) => state.user.me?.id); //로그인 안했으면 me가 없기 때문에 없는 경우를 대비해줘야한다\r\n  const { addCommentDone } = useSelector((state) => state.post);\r\n  const [CommentText, onChangeCommentText] = useinput(\"\");\r\n\r\n  useEffect(() => {\r\n    if (addCommentDone) {\r\n      setCommentText(\"\");\r\n    }\r\n  }, [addCommentDone]);\r\n\r\n  const onSubmitComment = useCallback(() => {\r\n    console.log(post.id, CommentText);\r\n    dispatchEvent({\r\n      type: ADD_COMMENT_REQUEST,\r\n      data: { content: CommentText, postId: post.id, userId: id },\r\n    });\r\n  }, [CommentText, id]);\r\n  return (\r\n    <Form onFinish={onSubmitComment}>\r\n      <Form.Item style={{ position: \"relative\", margin: 0 }}>\r\n        <Input.TextArea value={CommentText} onChange={onChangeCommentText} rows={4} />\r\n        <Button style={{ position: \"absolute\", right: 0, bottom: -37 }} type=\"danger\" htmlType=\"submit\">\r\n          삐약\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default CommentForm;\r\n"]},"metadata":{},"sourceType":"module"}