{"ast":null,"code":"import produce from \"immer\";\nexport var initialState = {\n  loadUserLoading: false,\n  //유저정보 가져오기 시도중\n  loadUserDone: false,\n  loadUserError: null,\n  followLoading: false,\n  //팔로우시도중\n  followDone: false,\n  followError: null,\n  unfollowLoading: false,\n  //언팔로우 시도중\n  unfollowDone: false,\n  //\n  unfollowError: null,\n  logInLoading: false,\n  //로그인 시도중\n  logInDone: false,\n  //\n  logInError: null,\n  logOutLoading: false,\n  //로그아웃 시도중\n  logOutDone: false,\n  logOutError: null,\n  signUpLoading: false,\n  // 회원가입 시도중\n  signUpDone: false,\n  signUpError: null,\n  changeNicknameLoading: false,\n  //닉네임 변경 시도중\n  changeNicknameDone: false,\n  changeNicknameError: null,\n  me: null,\n  signUpData: {},\n  loginData: {}\n}; //export 해둬야 index.js에서 모으지\n\nexport var LOAD_USER_REQUEST = \"LOAD_USER_REQUEST\";\nexport var LOAD_USER_SUCCESS = \"LOAD_USER_SUCCESS\";\nexport var LOAD_USER_FAILURE = \"LOAD_USER_FAILURE\";\nexport var LOG_IN_REQUEST = \"LOG_IN_REQUEST\";\nexport var LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\nexport var LOG_IN_FAILURE = \"LOG_IN_FAILURE\";\nexport var LOG_OUT_REQUEST = \"LOG_OUT_REQUEST\";\nexport var LOG_OUT_SUCCESS = \"LOG_OUT_SUCCESS\";\nexport var LOG_OUT_FAILURE = \"LOG_OUT_FAILURE\";\nexport var SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\nexport var SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\nexport var SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\nexport var CHANGE_NICKNAME_REQUEST = \"CHANGE_NICKNAME_REQUEST\";\nexport var CHANGE_NICKNAME_SUCCESS = \"CHANGE_NICKNAME_SUCCESS\";\nexport var CHANGE_NICKNAME_FAILURE = \"CHANGE_NICKNAME_FAILURE\";\nexport var FOLLOW_REQUEST = \"FOLLOW_REQUEST\";\nexport var FOLLOW_SUCCESS = \"FOLLOW_SUCCESS\";\nexport var FOLLOW_FAILURE = \"FOLLOW_FAILURE\";\nexport var UNFOLLOW_REQUEST = \"UNFOLLOW_REQUEST\";\nexport var UNFOLLOW_SUCCESS = \"UNFOLLOW_SUCCESS\";\nexport var UNFOLLOW_FAILURE = \"UNFOLLOW_FAILURE\";\nexport var ADD_POST_TO_ME = \"ADD_POST_TO_ME\";\nexport var REMOVE_POST_OF_ME = \"REMOVE_POST_OF_ME\"; // const dummyUser = (data) => ({\n//   ...data,\n//   nickname: \"주현\",\n//   id: 1,\n//   Posts: [{ id: 1 }],\n//   Followings: [{ nickname: \"부기초\" }, { nickname: \"감자\" }, { nickname: \"야이\" }],\n//   Followers: [{ nickname: \"치킨\" }, { nickname: \"피자\" }, { nickname: \"양념\" }],\n// }); //시퀄라이즈에서 합쳐주기 때문에 앞에 대문자 인것들이 있다.\n\nexport var loginRequestAction = function loginRequestAction(data) {\n  return {\n    type: LOG_IN_REQUEST,\n    data: data\n  };\n};\nexport var logoutRequestAction = function logoutRequestAction() {\n  return {\n    type: LOG_OUT_REQUEST\n  };\n}; // => { return produce 임 ㅋㅋ 생략방법임\n//draft를 불변성 상관없이 바꾸면 알아서 다음 draft를 보고 다음 state를 불변성있게 만들어줌\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case LOAD_USER_REQUEST:\n        draft.loadUserLoading = true;\n        draft.loadUserDone = false;\n        draft.loadUserError = null;\n        break;\n\n      case LOAD_USER_SUCCESS:\n        draft.loadUserLoading = false;\n        draft.me = action.data;\n        draft.loadUserDone = true;\n        break;\n\n      case LOAD_USER_FAILURE:\n        draft.loadUserLoading = false;\n        draft.loadUserError = action.error;\n        break;\n\n      case FOLLOW_REQUEST:\n        draft.followLoading = true;\n        draft.followDone = false;\n        draft.followError = null;\n        break;\n\n      case FOLLOW_SUCCESS:\n        draft.followLoading = false;\n        draft.followDone = true;\n        draft.me.Followings.push({\n          id: action.data.UserId\n        });\n        break;\n\n      case FOLLOW_FAILURE:\n        draft.followLoading = false;\n        draft.followError = action.error;\n        break;\n\n      case UNFOLLOW_REQUEST:\n        draft.unfollowLoading = true;\n        draft.unfollowDone = false;\n        draft.unfollowError = null;\n        break;\n\n      case UNFOLLOW_SUCCESS:\n        draft.unfollowLoading = false;\n        draft.unfollowDone = true;\n        draft.me.Followings = draft.me.Followings.filter(function (v) {\n          return v.id !== action.data;\n        });\n        break;\n      //지울때는 필터를 많이 사용한대, 제로초의 경우 , 그 사람만 빠지는 로직\n\n      case UNFOLLOW_FAILURE:\n        draft.unfollowLoading = false;\n        draft.unfollowError = action.error;\n        break;\n\n      case LOG_IN_REQUEST:\n        draft.logInLoading = true;\n        draft.logInError = null;\n        draft.logInDone = false;\n        break;\n\n      case LOG_IN_SUCCESS:\n        draft.logInLoading = false;\n        draft.me = action.data;\n        draft.logInDone = true;\n        break;\n\n      case LOG_IN_FAILURE:\n        draft.logInLoading = false;\n        draft.logInError = action.error;\n        break;\n\n      case LOG_OUT_REQUEST:\n        draft.logOutLoading = true;\n        draft.logOutDone = false;\n        draft.logOutError = null;\n        break;\n\n      case LOG_OUT_SUCCESS:\n        draft.logOutLoading = false;\n        draft.logOutDone = true;\n        draft.me = null;\n        break;\n\n      case LOG_OUT_FAILURE:\n        draft.logOutLoading = false;\n        draft.logOutError = action.error;\n        break;\n\n      case SIGN_UP_REQUEST:\n        draft.signUpLoading = true;\n        draft.signUpError = null;\n        draft.signUpDone = false;\n        break;\n\n      case SIGN_UP_SUCCESS:\n        draft.signUpLoading = false;\n        draft.signUpDone = true;\n        break;\n\n      case SIGN_UP_FAILURE:\n        draft.signUpLoading = false;\n        draft.signUpError = action.error;\n        break;\n\n      case CHANGE_NICKNAME_REQUEST:\n        draft.changeNicknameLoading = true; //바꾸고 싶은걸 이렇게 적어준다.\n\n        draft.changeNicknameDone = false;\n        draft.changeNicknameError = null;\n        break;\n\n      case CHANGE_NICKNAME_SUCCESS:\n        draft.me.nickname = action.data.nickname;\n        draft.changeNicknameLoading = false;\n        draft.changeNicknameDone = true; //바꾸고 싶은걸 이렇게 적어준다.\n\n        break;\n\n      case CHANGE_NICKNAME_FAILURE:\n        draft.changeNicknameLoading = false;\n        draft.changeNicknameError = action.error; //바꾸고 싶은걸 이렇게 적어준다.\n\n        break;\n\n      case ADD_POST_TO_ME:\n        draft.me.Posts.unshift({\n          id: action.data\n        });\n        break;\n      // return {\n      //   ...state,\n      //   me: {\n      //     ...state.me,\n      //     Posts: [{ id: action.data }, ...state.me.Posts],\n      //   },\n      // };\n\n      case REMOVE_POST_OF_ME:\n        draft.me.Posts = draft.me.Posts.filter(function (v) {\n          return v.id !== action.data;\n        });\n        break;\n      // return {\n      //   ...state,\n      //   me: {\n      //     ...state.me,\n      //     Posts: state.me.Posts.filter((v) => v.id !== action.data),\n      //   },\n      // };\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer; // // action creator 유저가 닉네임 어떻게 바꿀지 모르니 이렇게 해야함\n// const changeNickname = (data) => {\n//   return {\n//     type: CHANGE_NICKNAME,\n//     data,\n//   };\n// };\n// changeNickname(\"boogicho\");\n// // { type:\"CHANGE_NICKNAME\", data:\"boogicho\" }\n// //store.dispatch(changeNickname('mighty tak')); //이게 좋지","map":{"version":3,"sources":["C:/Users/wngus/Documents/GitHub/ZeroCho/nodebird/prepare/front/reducers/user.js"],"names":["produce","initialState","loadUserLoading","loadUserDone","loadUserError","followLoading","followDone","followError","unfollowLoading","unfollowDone","unfollowError","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","signUpLoading","signUpDone","signUpError","changeNicknameLoading","changeNicknameDone","changeNicknameError","me","signUpData","loginData","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","loginRequestAction","data","type","logoutRequestAction","reducer","state","action","draft","error","Followings","push","id","UserId","filter","v","nickname","Posts","unshift"],"mappings":"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","sourcesContent":["import produce from \"immer\";\r\n\r\nexport const initialState = {\r\n  loadUserLoading: false, //유저정보 가져오기 시도중\r\n  loadUserDone: false,\r\n  loadUserError: null,\r\n  followLoading: false, //팔로우시도중\r\n  followDone: false,\r\n  followError: null,\r\n  unfollowLoading: false, //언팔로우 시도중\r\n  unfollowDone: false, //\r\n  unfollowError: null,\r\n  logInLoading: false, //로그인 시도중\r\n  logInDone: false, //\r\n  logInError: null,\r\n  logOutLoading: false, //로그아웃 시도중\r\n  logOutDone: false,\r\n  logOutError: null,\r\n  signUpLoading: false, // 회원가입 시도중\r\n  signUpDone: false,\r\n  signUpError: null,\r\n  changeNicknameLoading: false, //닉네임 변경 시도중\r\n  changeNicknameDone: false,\r\n  changeNicknameError: null,\r\n  me: null,\r\n  signUpData: {},\r\n  loginData: {},\r\n};\r\n//export 해둬야 index.js에서 모으지\r\n\r\nexport const LOAD_USER_REQUEST = \"LOAD_USER_REQUEST\";\r\nexport const LOAD_USER_SUCCESS = \"LOAD_USER_SUCCESS\";\r\nexport const LOAD_USER_FAILURE = \"LOAD_USER_FAILURE\";\r\n\r\nexport const LOG_IN_REQUEST = \"LOG_IN_REQUEST\";\r\nexport const LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\r\nexport const LOG_IN_FAILURE = \"LOG_IN_FAILURE\";\r\n\r\nexport const LOG_OUT_REQUEST = \"LOG_OUT_REQUEST\";\r\nexport const LOG_OUT_SUCCESS = \"LOG_OUT_SUCCESS\";\r\nexport const LOG_OUT_FAILURE = \"LOG_OUT_FAILURE\";\r\n\r\nexport const SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\r\nexport const SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\r\nexport const SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\r\n\r\nexport const CHANGE_NICKNAME_REQUEST = \"CHANGE_NICKNAME_REQUEST\";\r\nexport const CHANGE_NICKNAME_SUCCESS = \"CHANGE_NICKNAME_SUCCESS\";\r\nexport const CHANGE_NICKNAME_FAILURE = \"CHANGE_NICKNAME_FAILURE\";\r\n\r\nexport const FOLLOW_REQUEST = \"FOLLOW_REQUEST\";\r\nexport const FOLLOW_SUCCESS = \"FOLLOW_SUCCESS\";\r\nexport const FOLLOW_FAILURE = \"FOLLOW_FAILURE\";\r\n\r\nexport const UNFOLLOW_REQUEST = \"UNFOLLOW_REQUEST\";\r\nexport const UNFOLLOW_SUCCESS = \"UNFOLLOW_SUCCESS\";\r\nexport const UNFOLLOW_FAILURE = \"UNFOLLOW_FAILURE\";\r\n\r\nexport const ADD_POST_TO_ME = \"ADD_POST_TO_ME\";\r\nexport const REMOVE_POST_OF_ME = \"REMOVE_POST_OF_ME\";\r\n\r\n// const dummyUser = (data) => ({\r\n//   ...data,\r\n//   nickname: \"주현\",\r\n//   id: 1,\r\n//   Posts: [{ id: 1 }],\r\n//   Followings: [{ nickname: \"부기초\" }, { nickname: \"감자\" }, { nickname: \"야이\" }],\r\n//   Followers: [{ nickname: \"치킨\" }, { nickname: \"피자\" }, { nickname: \"양념\" }],\r\n// }); //시퀄라이즈에서 합쳐주기 때문에 앞에 대문자 인것들이 있다.\r\n\r\nexport const loginRequestAction = (data) => {\r\n  return {\r\n    type: LOG_IN_REQUEST,\r\n    data,\r\n  };\r\n};\r\n\r\nexport const logoutRequestAction = () => {\r\n  return {\r\n    type: LOG_OUT_REQUEST,\r\n  };\r\n};\r\n\r\n// => { return produce 임 ㅋㅋ 생략방법임\r\n//draft를 불변성 상관없이 바꾸면 알아서 다음 draft를 보고 다음 state를 불변성있게 만들어줌\r\nconst reducer = (state = initialState, action) =>\r\n  produce(state, (draft) => {\r\n    switch (action.type) {\r\n      case LOAD_USER_REQUEST:\r\n        draft.loadUserLoading = true;\r\n        draft.loadUserDone = false;\r\n        draft.loadUserError = null;\r\n        break;\r\n      case LOAD_USER_SUCCESS:\r\n        draft.loadUserLoading = false;\r\n        draft.me = action.data;\r\n        draft.loadUserDone = true;\r\n        break;\r\n      case LOAD_USER_FAILURE:\r\n        draft.loadUserLoading = false;\r\n        draft.loadUserError = action.error;\r\n        break;\r\n      case FOLLOW_REQUEST:\r\n        draft.followLoading = true;\r\n        draft.followDone = false;\r\n        draft.followError = null;\r\n        break;\r\n      case FOLLOW_SUCCESS:\r\n        draft.followLoading = false;\r\n        draft.followDone = true;\r\n        draft.me.Followings.push({ id: action.data.UserId });\r\n        break;\r\n      case FOLLOW_FAILURE:\r\n        draft.followLoading = false;\r\n        draft.followError = action.error;\r\n        break;\r\n      case UNFOLLOW_REQUEST:\r\n        draft.unfollowLoading = true;\r\n        draft.unfollowDone = false;\r\n        draft.unfollowError = null;\r\n        break;\r\n      case UNFOLLOW_SUCCESS:\r\n        draft.unfollowLoading = false;\r\n        draft.unfollowDone = true;\r\n        draft.me.Followings = draft.me.Followings.filter((v) => v.id !== action.data);\r\n        break; //지울때는 필터를 많이 사용한대, 제로초의 경우 , 그 사람만 빠지는 로직\r\n      case UNFOLLOW_FAILURE:\r\n        draft.unfollowLoading = false;\r\n        draft.unfollowError = action.error;\r\n        break;\r\n      case LOG_IN_REQUEST:\r\n        draft.logInLoading = true;\r\n        draft.logInError = null;\r\n        draft.logInDone = false;\r\n        break;\r\n      case LOG_IN_SUCCESS:\r\n        draft.logInLoading = false;\r\n        draft.me = action.data;\r\n        draft.logInDone = true;\r\n        break;\r\n      case LOG_IN_FAILURE:\r\n        draft.logInLoading = false;\r\n        draft.logInError = action.error;\r\n        break;\r\n      case LOG_OUT_REQUEST:\r\n        draft.logOutLoading = true;\r\n        draft.logOutDone = false;\r\n        draft.logOutError = null;\r\n        break;\r\n      case LOG_OUT_SUCCESS:\r\n        draft.logOutLoading = false;\r\n        draft.logOutDone = true;\r\n        draft.me = null;\r\n        break;\r\n      case LOG_OUT_FAILURE:\r\n        draft.logOutLoading = false;\r\n        draft.logOutError = action.error;\r\n        break;\r\n      case SIGN_UP_REQUEST:\r\n        draft.signUpLoading = true;\r\n        draft.signUpError = null;\r\n        draft.signUpDone = false;\r\n        break;\r\n      case SIGN_UP_SUCCESS:\r\n        draft.signUpLoading = false;\r\n        draft.signUpDone = true;\r\n        break;\r\n      case SIGN_UP_FAILURE:\r\n        draft.signUpLoading = false;\r\n        draft.signUpError = action.error;\r\n        break;\r\n      case CHANGE_NICKNAME_REQUEST:\r\n        draft.changeNicknameLoading = true; //바꾸고 싶은걸 이렇게 적어준다.\r\n        draft.changeNicknameDone = false;\r\n        draft.changeNicknameError = null;\r\n        break;\r\n      case CHANGE_NICKNAME_SUCCESS:\r\n        draft.me.nickname = action.data.nickname;\r\n        draft.changeNicknameLoading = false;\r\n        draft.changeNicknameDone = true; //바꾸고 싶은걸 이렇게 적어준다.\r\n        break;\r\n      case CHANGE_NICKNAME_FAILURE:\r\n        draft.changeNicknameLoading = false;\r\n        draft.changeNicknameError = action.error; //바꾸고 싶은걸 이렇게 적어준다.\r\n        break;\r\n      case ADD_POST_TO_ME:\r\n        draft.me.Posts.unshift({ id: action.data });\r\n        break;\r\n      // return {\r\n      //   ...state,\r\n      //   me: {\r\n      //     ...state.me,\r\n      //     Posts: [{ id: action.data }, ...state.me.Posts],\r\n      //   },\r\n      // };\r\n      case REMOVE_POST_OF_ME:\r\n        draft.me.Posts = draft.me.Posts.filter((v) => v.id !== action.data);\r\n        break;\r\n      // return {\r\n      //   ...state,\r\n      //   me: {\r\n      //     ...state.me,\r\n      //     Posts: state.me.Posts.filter((v) => v.id !== action.data),\r\n      //   },\r\n      // };\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n\r\nexport default reducer;\r\n\r\n// // action creator 유저가 닉네임 어떻게 바꿀지 모르니 이렇게 해야함\r\n// const changeNickname = (data) => {\r\n//   return {\r\n//     type: CHANGE_NICKNAME,\r\n//     data,\r\n//   };\r\n// };\r\n// changeNickname(\"boogicho\");\r\n// // { type:\"CHANGE_NICKNAME\", data:\"boogicho\" }\r\n// //store.dispatch(changeNickname('mighty tak')); //이게 좋지\r\n"]},"metadata":{},"sourceType":"module"}