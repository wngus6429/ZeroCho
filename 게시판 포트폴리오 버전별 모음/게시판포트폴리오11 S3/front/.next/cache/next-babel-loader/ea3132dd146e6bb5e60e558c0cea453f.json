{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  logInLoading: false,\n  //로그인 시도중\n  logInDone: false,\n  //\n  logInError: null,\n  logOutLoading: false,\n  //로그아웃 시도중\n  logOutDone: false,\n  logOutError: null,\n  signUpLoading: false,\n  //회원가입 시도중\n  signUpDone: false,\n  signUpError: null,\n  me: null,\n  signUpDate: {},\n  loginData: {}\n}; //export 해둬야 index.js에서 모으지\n\nexport const LOG_IN_REQUEST = \"LOG_IN_REQUEST\";\nexport const LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\nexport const LOG_IN_FAILURE = \"LOG_IN_FAILURE\";\nexport const LOG_OUT_REQUEST = \"LOG_OUT_REQUEST\";\nexport const LOG_OUT_SUCCESS = \"LOG_OUT_SUCCESS\";\nexport const LOG_OUT_FAILURE = \"LOG_OUT_FAILURE\";\nexport const SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\nexport const SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\nexport const SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\nexport const FOLLOW_REQUEST = \"FOLLOW_REQUEST\";\nexport const FOLLOW_SUCCESS = \"FOLLOW_SUCCESS\";\nexport const FOLLOW_FAILURE = \"FOLLOW_FAILURE\";\nexport const UNFOLLOW_REQUEST = \"UNFOLLOW_REQUEST\";\nexport const UNFOLLOW_SUCCESS = \"UNFOLLOW_SUCCESS\";\nexport const UNFOLLOW_FAILURE = \"UNFOLLOW_FAILURE\";\n\nconst dummyUser = data => _objectSpread(_objectSpread({}, data), {}, {\n  nickname: [\"주현\"],\n  id: 1,\n  Posts: [\"게임\"],\n  Followings: [],\n  Followers: []\n}); //시퀄라이즈에서 합쳐주기 때문에 앞에 대문자 인것들이 있다.\n\n\nexport const loginRequestAction = data => {\n  return {\n    type: LOG_IN_REQUEST,\n    data\n  };\n};\nexport const logoutRequestAction = () => {\n  return {\n    type: LOG_OUT_REQUEST\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      console.log(\"Reducer User.js\");\n      return _objectSpread(_objectSpread({}, state), {}, {\n        //안바꾸고 싶은건 ... 써서 참조\n        logInLoading: true,\n        //바꾸고 싶은걸 이렇게 적어준다.\n        logInDone: false,\n        logInError: null\n      });\n\n    case LOG_IN_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        //안바꾸고 싶은건 ... 써서 참조\n        logInLoading: false,\n        logInDone: true,\n        //바꾸고 싶은걸 이렇게 적어준다.\n        me: dummyUser(action.data)\n      });\n\n    case LOG_IN_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        //안바꾸고 싶은건 ... 써서 참조\n        logInLoading: false,\n        logInError: action.error //바꾸고 싶은걸 이렇게 적어준다.\n\n      });\n\n    case LOG_OUT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        //안바꾸고 싶은건 ... 써서 참조\n        logOutLoading: true,\n        //바꾸고 싶은걸 이렇게 적어준다.\n        logOutDone: false,\n        logOutError: null\n      });\n\n    case LOG_OUT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logOutLoading: false,\n        logOutDone: true,\n        me: null\n      });\n\n    case LOG_OUT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        //안바꾸고 싶은건 ... 써서 참조\n        logOutLoading: false,\n        logOutError: action.error\n      });\n\n    case SIGN_UP_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        //안바꾸고 싶은건 ... 써서 참조\n        signUpLoading: true,\n        //바꾸고 싶은걸 이렇게 적어준다.\n        signUpDone: false,\n        signUpError: null\n      });\n\n    case SIGN_UP_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        //안바꾸고 싶은건 ... 써서 참조\n        signUpLoading: false,\n        signUpDone: true\n      });\n\n    case SIGN_UP_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        //안바꾸고 싶은건 ... 써서 참조\n        signUpLoading: false,\n        signUpError: action.error\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer; // // action creator 유저가 닉네임 어떻게 바꿀지 모르니 이렇게 해야함\n// const changeNickname = (data) => {\n//   return {\n//     type: CHANGE_NICKNAME,\n//     data,\n//   };\n// };\n// changeNickname(\"boogicho\");\n// // { type:\"CHANGE_NICKNAME\", data:\"boogicho\" }\n// //store.dispatch(changeNickname('mighty tak')); //이게 좋지","map":{"version":3,"sources":["C:/Users/wngus/Documents/GitHub/ZeroCho/nodebird/prepare/front/reducers/user.js"],"names":["initialState","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","signUpLoading","signUpDone","signUpError","me","signUpDate","loginData","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","dummyUser","data","nickname","id","Posts","Followings","Followers","loginRequestAction","type","logoutRequestAction","reducer","state","action","console","log","error"],"mappings":"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","sourcesContent":["export const initialState = {\r\n  logInLoading: false, //로그인 시도중\r\n  logInDone: false, //\r\n  logInError: null,\r\n  logOutLoading: false, //로그아웃 시도중\r\n  logOutDone: false,\r\n  logOutError: null,\r\n  signUpLoading: false, //회원가입 시도중\r\n  signUpDone: false,\r\n  signUpError: null,\r\n  me: null,\r\n  signUpDate: {},\r\n  loginData: {},\r\n};\r\n//export 해둬야 index.js에서 모으지\r\n\r\nexport const LOG_IN_REQUEST = \"LOG_IN_REQUEST\";\r\nexport const LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\r\nexport const LOG_IN_FAILURE = \"LOG_IN_FAILURE\";\r\n\r\nexport const LOG_OUT_REQUEST = \"LOG_OUT_REQUEST\";\r\nexport const LOG_OUT_SUCCESS = \"LOG_OUT_SUCCESS\";\r\nexport const LOG_OUT_FAILURE = \"LOG_OUT_FAILURE\";\r\n\r\nexport const SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\r\nexport const SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\r\nexport const SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\r\n\r\nexport const FOLLOW_REQUEST = \"FOLLOW_REQUEST\";\r\nexport const FOLLOW_SUCCESS = \"FOLLOW_SUCCESS\";\r\nexport const FOLLOW_FAILURE = \"FOLLOW_FAILURE\";\r\n\r\nexport const UNFOLLOW_REQUEST = \"UNFOLLOW_REQUEST\";\r\nexport const UNFOLLOW_SUCCESS = \"UNFOLLOW_SUCCESS\";\r\nexport const UNFOLLOW_FAILURE = \"UNFOLLOW_FAILURE\";\r\n\r\nconst dummyUser = (data) => ({\r\n  ...data,\r\n  nickname: [\"주현\"],\r\n  id: 1,\r\n  Posts: [\"게임\"],\r\n  Followings: [],\r\n  Followers: [],\r\n}); //시퀄라이즈에서 합쳐주기 때문에 앞에 대문자 인것들이 있다.\r\n\r\nexport const loginRequestAction = (data) => {\r\n  return {\r\n    type: LOG_IN_REQUEST,\r\n    data,\r\n  };\r\n};\r\n\r\nexport const logoutRequestAction = () => {\r\n  return {\r\n    type: LOG_OUT_REQUEST,\r\n  };\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOG_IN_REQUEST:\r\n      console.log(\"Reducer User.js\");\r\n      return {\r\n        ...state, //안바꾸고 싶은건 ... 써서 참조\r\n        logInLoading: true, //바꾸고 싶은걸 이렇게 적어준다.\r\n        logInDone: false,\r\n        logInError: null,\r\n      };\r\n    case LOG_IN_SUCCESS:\r\n      return {\r\n        ...state, //안바꾸고 싶은건 ... 써서 참조\r\n        logInLoading: false,\r\n        logInDone: true, //바꾸고 싶은걸 이렇게 적어준다.\r\n        me: dummyUser(action.data),\r\n      };\r\n    case LOG_IN_FAILURE:\r\n      return {\r\n        ...state, //안바꾸고 싶은건 ... 써서 참조\r\n        logInLoading: false,\r\n        logInError: action.error, //바꾸고 싶은걸 이렇게 적어준다.\r\n      };\r\n    case LOG_OUT_REQUEST:\r\n      return {\r\n        ...state, //안바꾸고 싶은건 ... 써서 참조\r\n        logOutLoading: true, //바꾸고 싶은걸 이렇게 적어준다.\r\n        logOutDone: false,\r\n        logOutError: null,\r\n      };\r\n    case LOG_OUT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        logOutLoading: false,\r\n        logOutDone: true,\r\n        me: null,\r\n      };\r\n    case LOG_OUT_FAILURE:\r\n      return {\r\n        ...state, //안바꾸고 싶은건 ... 써서 참조\r\n        logOutLoading: false,\r\n        logOutError: action.error,\r\n      };\r\n    case SIGN_UP_REQUEST:\r\n      return {\r\n        ...state, //안바꾸고 싶은건 ... 써서 참조\r\n        signUpLoading: true, //바꾸고 싶은걸 이렇게 적어준다.\r\n        signUpDone: false,\r\n        signUpError: null,\r\n      };\r\n    case SIGN_UP_SUCCESS:\r\n      return {\r\n        ...state, //안바꾸고 싶은건 ... 써서 참조\r\n        signUpLoading: false,\r\n        signUpDone: true,\r\n      };\r\n    case SIGN_UP_FAILURE:\r\n      return {\r\n        ...state, //안바꾸고 싶은건 ... 써서 참조\r\n        signUpLoading: false,\r\n        signUpError: action.error,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n\r\n// // action creator 유저가 닉네임 어떻게 바꿀지 모르니 이렇게 해야함\r\n// const changeNickname = (data) => {\r\n//   return {\r\n//     type: CHANGE_NICKNAME,\r\n//     data,\r\n//   };\r\n// };\r\n// changeNickname(\"boogicho\");\r\n// // { type:\"CHANGE_NICKNAME\", data:\"boogicho\" }\r\n// //store.dispatch(changeNickname('mighty tak')); //이게 좋지\r\n"]},"metadata":{},"sourceType":"module"}