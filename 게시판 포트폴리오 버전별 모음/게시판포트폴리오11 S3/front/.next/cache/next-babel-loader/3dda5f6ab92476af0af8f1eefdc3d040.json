{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\wngus\\\\Documents\\\\GitHub\\\\ZeroCho\\\\nodebird\\\\prepare\\\\front\\\\components\\\\LoginForm.js\";\nimport React, { useState, useCallback, useMemo } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport Link from \"next/link\";\nimport styled from \"styled-components\"; //import PropTypes from \"prop-types\";\n\nimport useinput from \"../hooks/useinput\";\nimport { useDispatch } from \"react-redux\";\nimport { loginAction } from \"../reducers\";\nconst ButtonWrapper = styled.div`\n  margin-top: 10px;\n`;\nconst FormWrapper = styled(Form)`\n  padding: 10px;\n`;\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const [Id, onChangeId] = useinput(\"\"); // const [Id, setId] = useState(\"\");\n  // const onChangeId = useCallback((e) => {\n  //   setId(e.target.value);\n  // }, []);\n\n  const [Password, onChangePassword] = useinput(\"\"); // const [Password, setPassword] = useState(\"\");\n  //useCallback 써야 성능이 좋아진다.\n  // const onChangePassword = useCallback((e) => {\n  //   setPassword(e.target.value);\n  // }, []);\n\n  const onSubmitForm = useCallback(() => {\n    console.log(Id, Password);\n    dispatch(loginAction({\n      Id,\n      Password\n    }));\n  }, [Id, Password]);\n  return /*#__PURE__*/_jsxDEV(FormWrapper, {\n    onFinish: onSubmitForm,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"user-id\",\n        children: \"\\uC544\\uC774\\uB514\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"user-id\",\n        value: Id,\n        onChange: onChangeId,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"user-password\",\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"user-password\",\n        type: \"password\",\n        value: Password,\n        onChange: onChangePassword,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: false,\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/signup\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\nexport default LoginForm; //const style = useMemo(()=>({ marginTop:10}),[])\n//<ButtonWrapper style={style}></ButtonWrapper>\n//label htmlFor랑 밑에 input name 이랑 연결 시킨거임\n//type=\"primary 는 색을 담당한다\n//htmlType=\"submit\" 이 되어 있어야 위에 Form이 작동함 그리고 onFinish 가 호출이 된다\n//그리고 onFinish에는 e.preventDefault()가 이미 되어져 있음","map":{"version":3,"sources":["C:/Users/wngus/Documents/GitHub/ZeroCho/nodebird/prepare/front/components/LoginForm.js"],"names":["React","useState","useCallback","useMemo","Form","Input","Button","Link","styled","useinput","useDispatch","loginAction","ButtonWrapper","div","FormWrapper","LoginForm","dispatch","Id","onChangeId","Password","onChangePassword","onSubmitForm","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CACA;;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,MAAMC,aAAa,GAAGJ,MAAM,CAACK,GAAI;AACjC;AACA,CAFA;AAIA,MAAMC,WAAW,GAAGN,MAAM,CAACJ,IAAD,CAAO;AACjC;AACA,CAFA;;AAIA,MAAMW,SAAS,GAAG,MAAM;AACtB,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AAEA,QAAM,CAACO,EAAD,EAAKC,UAAL,IAAmBT,QAAQ,CAAC,EAAD,CAAjC,CAHsB,CAItB;AACA;AACA;AACA;;AACA,QAAM,CAACU,QAAD,EAAWC,gBAAX,IAA+BX,QAAQ,CAAC,EAAD,CAA7C,CARsB,CAStB;AACA;AACA;AACA;AACA;;AAEA,QAAMY,YAAY,GAAGnB,WAAW,CAAC,MAAM;AACrCoB,IAAAA,OAAO,CAACC,GAAR,CAAYN,EAAZ,EAAgBE,QAAhB;AACAH,IAAAA,QAAQ,CAACL,WAAW,CAAC;AAAEM,MAAAA,EAAF;AAAME,MAAAA;AAAN,KAAD,CAAZ,CAAR;AACD,GAH+B,EAG7B,CAACF,EAAD,EAAKE,QAAL,CAH6B,CAAhC;AAKA,sBACE,QAAC,WAAD;AAAa,IAAA,QAAQ,EAAEE,YAAvB;AAAA,4BACE;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,SAAZ;AAAsB,QAAA,KAAK,EAAEJ,EAA7B;AAAiC,QAAA,QAAQ,EAAEC,UAA3C;AAAuD,QAAA,QAAQ;AAA/D;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,eAAZ;AAA4B,QAAA,IAAI,EAAC,UAAjC;AAA4C,QAAA,KAAK,EAAEC,QAAnD;AAA6D,QAAA,QAAQ,EAAEC,gBAAvE;AAAyF,QAAA,QAAQ;AAAjG;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAWE,QAAC,aAAD;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,QAAQ,EAAC,QAAhC;AAAyC,QAAA,OAAO,EAAE,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,SAAX;AAAA,+BACE;AAAA,iCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CA5CD;;AA8CA,eAAeL,SAAf,C,CAEA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["import React, { useState, useCallback, useMemo } from \"react\";\r\nimport { Form, Input, Button } from \"antd\";\r\nimport Link from \"next/link\";\r\nimport styled from \"styled-components\";\r\n//import PropTypes from \"prop-types\";\r\nimport useinput from \"../hooks/useinput\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { loginAction } from \"../reducers\";\r\n\r\nconst ButtonWrapper = styled.div`\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst FormWrapper = styled(Form)`\r\n  padding: 10px;\r\n`;\r\n\r\nconst LoginForm = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [Id, onChangeId] = useinput(\"\");\r\n  // const [Id, setId] = useState(\"\");\r\n  // const onChangeId = useCallback((e) => {\r\n  //   setId(e.target.value);\r\n  // }, []);\r\n  const [Password, onChangePassword] = useinput(\"\");\r\n  // const [Password, setPassword] = useState(\"\");\r\n  //useCallback 써야 성능이 좋아진다.\r\n  // const onChangePassword = useCallback((e) => {\r\n  //   setPassword(e.target.value);\r\n  // }, []);\r\n\r\n  const onSubmitForm = useCallback(() => {\r\n    console.log(Id, Password);\r\n    dispatch(loginAction({ Id, Password }));\r\n  }, [Id, Password]);\r\n\r\n  return (\r\n    <FormWrapper onFinish={onSubmitForm}>\r\n      <div>\r\n        <label htmlFor=\"user-id\">아이디</label>\r\n        <br />\r\n        <Input name=\"user-id\" value={Id} onChange={onChangeId} required />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"user-password\">비밀번호</label>\r\n        <br />\r\n        <Input name=\"user-password\" type=\"password\" value={Password} onChange={onChangePassword} required />\r\n      </div>\r\n      <ButtonWrapper>\r\n        <Button type=\"primary\" htmlType=\"submit\" loading={false}>\r\n          로그인\r\n        </Button>\r\n        <Link href=\"/signup\">\r\n          <a>\r\n            <Button>회원가입</Button>\r\n          </a>\r\n        </Link>\r\n      </ButtonWrapper>\r\n    </FormWrapper>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n\r\n//const style = useMemo(()=>({ marginTop:10}),[])\r\n//<ButtonWrapper style={style}></ButtonWrapper>\r\n\r\n//label htmlFor랑 밑에 input name 이랑 연결 시킨거임\r\n//type=\"primary 는 색을 담당한다\r\n//htmlType=\"submit\" 이 되어 있어야 위에 Form이 작동함 그리고 onFinish 가 호출이 된다\r\n//그리고 onFinish에는 e.preventDefault()가 이미 되어져 있음\r\n"]},"metadata":{},"sourceType":"module"}