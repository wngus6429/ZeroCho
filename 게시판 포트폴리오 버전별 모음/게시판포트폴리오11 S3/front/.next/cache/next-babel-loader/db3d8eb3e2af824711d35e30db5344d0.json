{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//import { HYDRATE } from \"next-redux-wrapper\";\n//초기 앱 데이터 구조를 잡아야함\nvar initialState = {\n  user: {\n    isLoggedIn: false,\n    user: null,\n    signUpDate: {},\n    loginData: {}\n  },\n  post: {\n    mainPosts: []\n  }\n};\nexport var loginAction = function loginAction(data) {\n  return {\n    type: \"LOG_IN\",\n    data: data\n  };\n};\nexport var logoutAction = function logoutAction(data) {\n  return {\n    type: \"LOG_OUT\"\n  };\n}; // const changeNickname = {\n//     type: \"CHANGE_NICKNAME\",\n//     data: \"boogicho\",\n//   };\n//async action creator //비동기 action creator\n// action creator 유저가 닉네임 어떻게 바꿀지 모르니 이렇게 해야함\n\nvar changeNickname = function changeNickname(data) {\n  return {\n    type: \"CHANGE_NICKNAME\",\n    data: data\n  };\n};\n\nchangeNickname(\"boogicho\"); // { type:\"CHANGE_NICKNAME\", data:\"boogicho\" }\n\nstore.dispatch(changeNickname(\"mighty tak\")); //이게 좋지\n// (이전 상태, 액션) => 다음 상태\n\nvar rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    // case HYDRATE:\n    //   console.log(\"HYDRATE\", action);\n    //   return { ...state, ...action.payload };\n    case \"LOG_IN\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          //안바꾸고 싶은건 ... 써서 참조\n          isLoggedIn: true,\n          //바꾸고 싶은걸 이렇게 적어준다.\n          user: action.data\n        })\n      });\n\n    case \"LOG_OUT\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          //안바꾸고 싶은건 ... 써서 참조\n          isLoggedIn: false,\n          //바꾸고 싶은걸 이렇게 적어준다.\n          user: null\n        })\n      });\n    // default:\n    //   return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/wngus/Documents/GitHub/ZeroCho/nodebird/prepare/front/reducers/index.js"],"names":["initialState","user","isLoggedIn","signUpDate","loginData","post","mainPosts","loginAction","data","type","logoutAction","changeNickname","store","dispatch","rootReducer","state","action"],"mappings":";;;;;;AAAA;AAEA;AACA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,UAAU,EAAE,KADR;AAEJD,IAAAA,IAAI,EAAE,IAFF;AAGJE,IAAAA,UAAU,EAAE,EAHR;AAIJC,IAAAA,SAAS,EAAE;AAJP,GADa;AAOnBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAE;AADP;AAPa,CAArB;AAYA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,IAAD,EAAU;AACnC,SAAO;AACLC,IAAAA,IAAI,EAAE,QADD;AAELD,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,IAAME,YAAY,GAAG,SAAfA,YAAe,CAACF,IAAD,EAAU;AACpC,SAAO;AACLC,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM,C,CAKP;AACA;AACA;AACA;AAEA;AAEA;;AACA,IAAME,cAAc,GAAG,SAAjBA,cAAiB,CAACH,IAAD,EAAU;AAC/B,SAAO;AACLC,IAAAA,IAAI,EAAE,iBADD;AAELD,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID,CALD;;AAMAG,cAAc,CAAC,UAAD,CAAd,C,CACA;;AACAC,KAAK,CAACC,QAAN,CAAeF,cAAc,CAAC,YAAD,CAA7B,E,CAA8C;AAE9C;;AACA,IAAMG,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBf,YAAyB;AAAA,MAAXgB,MAAW;;AACpD,UAAQA,MAAM,CAACP,IAAf;AACE;AACA;AACA;AACA,SAAK,QAAL;AACE,6CACKM,KADL;AAEEd,QAAAA,IAAI,kCACCc,KAAK,CAACd,IADP;AACa;AACfC,UAAAA,UAAU,EAAE,IAFV;AAEgB;AAClBD,UAAAA,IAAI,EAAEe,MAAM,CAACR;AAHX;AAFN;;AAQF,SAAK,SAAL;AACE,6CACKO,KADL;AAEEd,QAAAA,IAAI,kCACCc,KAAK,CAACd,IADP;AACa;AACfC,UAAAA,UAAU,EAAE,KAFV;AAEiB;AACnBD,UAAAA,IAAI,EAAE;AAHJ;AAFN;AAQF;AACA;AAvBF;AAyBD,CA1BD;;AA4BA,eAAea,WAAf","sourcesContent":["//import { HYDRATE } from \"next-redux-wrapper\";\r\n\r\n//초기 앱 데이터 구조를 잡아야함\r\nconst initialState = {\r\n  user: {\r\n    isLoggedIn: false,\r\n    user: null,\r\n    signUpDate: {},\r\n    loginData: {},\r\n  },\r\n  post: {\r\n    mainPosts: [],\r\n  },\r\n};\r\n\r\nexport const loginAction = (data) => {\r\n  return {\r\n    type: \"LOG_IN\",\r\n    data,\r\n  };\r\n};\r\n\r\nexport const logoutAction = (data) => {\r\n  return {\r\n    type: \"LOG_OUT\",\r\n  };\r\n};\r\n// const changeNickname = {\r\n//     type: \"CHANGE_NICKNAME\",\r\n//     data: \"boogicho\",\r\n//   };\r\n\r\n//async action creator //비동기 action creator\r\n\r\n// action creator 유저가 닉네임 어떻게 바꿀지 모르니 이렇게 해야함\r\nconst changeNickname = (data) => {\r\n  return {\r\n    type: \"CHANGE_NICKNAME\",\r\n    data,\r\n  };\r\n};\r\nchangeNickname(\"boogicho\");\r\n// { type:\"CHANGE_NICKNAME\", data:\"boogicho\" }\r\nstore.dispatch(changeNickname(\"mighty tak\")); //이게 좋지\r\n\r\n// (이전 상태, 액션) => 다음 상태\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    // case HYDRATE:\r\n    //   console.log(\"HYDRATE\", action);\r\n    //   return { ...state, ...action.payload };\r\n    case \"LOG_IN\":\r\n      return {\r\n        ...state,\r\n        user: {\r\n          ...state.user, //안바꾸고 싶은건 ... 써서 참조\r\n          isLoggedIn: true, //바꾸고 싶은걸 이렇게 적어준다.\r\n          user: action.data,\r\n        },\r\n      };\r\n    case \"LOG_OUT\":\r\n      return {\r\n        ...state,\r\n        user: {\r\n          ...state.user, //안바꾸고 싶은건 ... 써서 참조\r\n          isLoggedIn: false, //바꾸고 싶은걸 이렇게 적어준다.\r\n          user: null,\r\n        },\r\n      };\r\n    // default:\r\n    //   return state;\r\n  }\r\n};\r\n\r\nexport default rootReducer;\r\n"]},"metadata":{},"sourceType":"module"}