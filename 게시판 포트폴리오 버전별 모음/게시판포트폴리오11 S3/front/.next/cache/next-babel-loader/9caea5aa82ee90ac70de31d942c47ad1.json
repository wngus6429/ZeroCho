{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(removeFollower),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(loadFollowers),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(loadFollowings),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(changeNickname),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(loadMyInfo),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(loadUser),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(logIn),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(logOut),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(signUp),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(follow),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(unfollow),\n    _marked12 = /*#__PURE__*/_regeneratorRuntime.mark(watchRemoveFollower),\n    _marked13 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadFollowers),\n    _marked14 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadFollowings),\n    _marked15 = /*#__PURE__*/_regeneratorRuntime.mark(watchChangeNickname),\n    _marked16 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadMyInfo),\n    _marked17 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadUser),\n    _marked18 = /*#__PURE__*/_regeneratorRuntime.mark(watchFollow),\n    _marked19 = /*#__PURE__*/_regeneratorRuntime.mark(watchUnfollow),\n    _marked20 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogIn),\n    _marked21 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogOut),\n    _marked22 = /*#__PURE__*/_regeneratorRuntime.mark(watchSignUp),\n    _marked23 = /*#__PURE__*/_regeneratorRuntime.mark(userSaga);\n\nimport { all, fork, delay, put, takeLatest, call } from \"redux-saga/effects\"; //여기안에 delay, debounce, throttle, takeLastest, takeEvery, takeMaybe 같은것도 있음\n//지금 적은것들이 사가의 effect라 불림\n\nimport { LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, FOLLOW_REQUEST, UNFOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, CHANGE_NICKNAME_FAILURE, LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWINGS_REQUEST, LOAD_FOLLOWERS_SUCCESS, LOAD_FOLLOWERS_FAILURE, LOAD_FOLLOWINGS_SUCCESS, LOAD_FOLLOWINGS_FAILURE, REMOVE_FOLLOWER_REQUEST, REMOVE_FOLLOWER_SUCCESS, REMOVE_FOLLOWER_FAILURE } from \"../reducers/user\";\nimport axios from \"axios\"; //이거는 컴바인 리듀스 같은게 필요 없음.\n\nfunction removeFollowerAPI(data) {\n  return axios[\"delete\"](\"/user/follower/\".concat(data));\n} //몇번 팔로우를 제거한다\n\n\nfunction removeFollower(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function removeFollower$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(removeFollowerAPI, action.data);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            type: REMOVE_FOLLOWER_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context.next = 13;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n          _context.next = 13;\n          return put({\n            type: REMOVE_FOLLOWER_FAILURE,\n            error: _context.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction loadFollowersAPI(data) {\n  return axios.get(\"/user/followers\", data);\n}\n\nfunction loadFollowers(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadFollowers$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(loadFollowersAPI, action.data);\n\n        case 3:\n          result = _context2.sent;\n          _context2.next = 6;\n          return put({\n            type: LOAD_FOLLOWERS_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context2.next = 13;\n          break;\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.error(_context2.t0);\n          _context2.next = 13;\n          return put({\n            type: LOAD_FOLLOWERS_FAILURE,\n            error: _context2.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 8]]);\n}\n\nfunction loadFollowingsAPI(data) {\n  return axios.get(\"/user/followings\", data);\n}\n\nfunction loadFollowings(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadFollowings$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(loadFollowingsAPI, action.data);\n\n        case 3:\n          result = _context3.sent;\n          _context3.next = 6;\n          return put({\n            type: LOAD_FOLLOWINGS_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context3.next = 13;\n          break;\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.error(_context3.t0);\n          _context3.next = 13;\n          return put({\n            type: LOAD_FOLLOWINGS_FAILURE,\n            error: _context3.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 8]]);\n}\n\nfunction changeNicknameAPI(data) {\n  return axios.patch(\"/user/nickname\", {\n    nickname: data\n  });\n}\n\nfunction changeNickname(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function changeNickname$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(changeNicknameAPI, action.data);\n\n        case 3:\n          result = _context4.sent;\n          _context4.next = 6;\n          return put({\n            type: CHANGE_NICKNAME_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context4.next = 12;\n          break;\n\n        case 8:\n          _context4.prev = 8;\n          _context4.t0 = _context4[\"catch\"](0);\n          _context4.next = 12;\n          return put({\n            type: CHANGE_NICKNAME_FAILURE,\n            error: _context4.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 8]]);\n}\n\nfunction loadMyInfoAPI() {\n  return axios.get(\"/user\");\n}\n\nfunction loadMyInfo(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadMyInfo$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(loadMyInfoAPI, action.data);\n\n        case 3:\n          result = _context5.sent;\n          _context5.next = 6;\n          return put({\n            type: LOAD_USER_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context5.next = 12;\n          break;\n\n        case 8:\n          _context5.prev = 8;\n          _context5.t0 = _context5[\"catch\"](0);\n          _context5.next = 12;\n          return put({\n            type: LOAD_USER_FAILURE,\n            error: _context5.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 8]]);\n} //get,delete는 데이터가 없기 떄문에, 두번째 자리가 withCredential자리, 근데\n//saga에서 공통 설정 해줬음\n\n\nfunction logUserAPI() {\n  return axios.get(\"/user\");\n}\n\nfunction loadUser(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadUser$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _context6.next = 3;\n          return call(logUserAPI, action.data);\n\n        case 3:\n          result = _context6.sent;\n          _context6.next = 6;\n          return put({\n            type: LOAD_USER_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context6.next = 12;\n          break;\n\n        case 8:\n          _context6.prev = 8;\n          _context6.t0 = _context6[\"catch\"](0);\n          _context6.next = 12;\n          return put({\n            type: LOAD_USER_FAILURE,\n            error: _context6.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[0, 8]]);\n} //logInAPI이거는 generator안임. * 붙이면 안됨\n\n\nfunction logInAPI(data) {\n  return axios.post(\"/user/login\", data); //로그인 요청 함\n} //항상 effect 앞에는 yield(일드)를 붙여준다\n//call, fork차이, fork는 비동기 함수 호출, call은 동기함수 호출\n//call을 하면 로그인 api가 리턴 할때까지 기다림. fork는 비동기라 요청보내버리고\n//결과 안 기다리고 바로 다음으로 감, call은 await이랑 비슷\n//그리고 데이터를 보낼때 logInAPI(action.data) 이렇게 해야하는데, call을 쓰면\n// 이걸 펼쳐줘야함 call(logInAPI, action.data); 밑에 처럼 이렇게\n//첫번쨰 자리가 함수고, 그 다음에 매개변수, 인수임 ,를 써서 더 주기 가능\n//굳이 yield를 안 붙여도되지만 붙이는 이유가 테스트 때문, 동작 보장이 되는가?\n\n\nfunction logIn(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function logIn$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          console.log(\"Saga User.js\");\n          _context7.next = 4;\n          return call(logInAPI, action.data);\n\n        case 4:\n          result = _context7.sent;\n          _context7.next = 7;\n          return put({\n            type: LOG_IN_SUCCESS,\n            //put은 dispatch라고 생각하면됨\n            data: result.data //성공 결과값, 성공후 reducer user.js switch로\n\n          });\n\n        case 7:\n          _context7.next = 13;\n          break;\n\n        case 9:\n          _context7.prev = 9;\n          _context7.t0 = _context7[\"catch\"](0);\n          _context7.next = 13;\n          return put({\n            type: LOG_IN_FAILURE,\n            error: _context7.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 9]]);\n} //애네들이 비동기 액션 크리에이터, thunk는 비동기 크리에이터를 직접 했지만\n//Saga는 이벤트 리스너 같은 역할, 비유 하자면\n//로그인 액션이 들어오면,로그인 제너레이터 함수를 실행 하도록, * 있는게 제너레이터 함수\n//take는 문제가 1회성임. 로그인하고 로그아웃하면 로그인 이벤트가 사라진다는 말\n//그래서 while을 사용하는거임. 이걸해야 진정한 이벤트 리스너 ㅋㅋ (원노트 참조)\n//근데 반복문 적는건 좀 보기 안 좋고 더 좋은 기능인 takeEvery를 사용\n//takeLatest 는 마지막에 클릭한거. (로딩 도중 기준) 여러번 클릭 방지, 첫번째꺼는 takeLeading\n\n\nfunction logOutAPI() {\n  return axios.post(\"/user/logout\"); //로그인 요청 함\n}\n\nfunction logOut() {\n  return _regeneratorRuntime.wrap(function logOut$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.prev = 0;\n          _context8.next = 3;\n          return call(logOutAPI);\n\n        case 3:\n          _context8.next = 5;\n          return put({\n            type: LOG_OUT_SUCCESS\n          });\n\n        case 5:\n          _context8.next = 12;\n          break;\n\n        case 7:\n          _context8.prev = 7;\n          _context8.t0 = _context8[\"catch\"](0);\n          console.error(_context8.t0);\n          _context8.next = 12;\n          return put({\n            type: LOG_OUT_FAILURE,\n            error: _context8.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8, null, [[0, 7]]);\n}\n\nfunction signUpAPI(data) {\n  return axios.post(\"/user\", data); //로그인 요청 함\n} //data안에 Email, Password, NickName 가 들어있다. signup.js 참조\n//get이랑 delete요청은 데이터를 못 보내지만, post,put,patch는 넘길수 있다. 두번째로\n\n\nfunction signUp(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function signUp$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.prev = 0;\n          _context9.next = 3;\n          return call(signUpAPI, action.data);\n\n        case 3:\n          result = _context9.sent;\n          //yield delay(1000); //throw new Error(\"\")를 하게 되면 바로 밑에 catch로 간다\n          console.log(result);\n          _context9.next = 7;\n          return put({\n            type: SIGN_UP_SUCCESS\n          });\n\n        case 7:\n          _context9.next = 14;\n          break;\n\n        case 9:\n          _context9.prev = 9;\n          _context9.t0 = _context9[\"catch\"](0);\n          console.error(_context9.t0);\n          _context9.next = 14;\n          return put({\n            type: SIGN_UP_FAILURE,\n            error: _context9.t0.response.data\n          });\n\n        case 14:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9, null, [[0, 9]]);\n}\n\nfunction followAPI(data) {\n  return axios.patch(\"/user/\".concat(data, \"/follow\"));\n} //data에 사용자 id넣어줌\n\n\nfunction follow(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function follow$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.prev = 0;\n          _context10.next = 3;\n          return call(followAPI, action.data);\n\n        case 3:\n          result = _context10.sent;\n          _context10.next = 6;\n          return put({\n            type: FOLLOW_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context10.next = 13;\n          break;\n\n        case 8:\n          _context10.prev = 8;\n          _context10.t0 = _context10[\"catch\"](0);\n          console.error(_context10.t0);\n          _context10.next = 13;\n          return put({\n            type: FOLLOW_FAILURE,\n            error: _context10.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10, null, [[0, 8]]);\n}\n\nfunction unfollowAPI(data) {\n  return axios[\"delete\"](\"/user/\".concat(data, \"/follow\")); //로그인 요청 함\n} //data에 사용자 id넣어줌\n\n\nfunction unfollow(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function unfollow$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.prev = 0;\n          _context11.next = 3;\n          return call(unfollowAPI, action.data);\n\n        case 3:\n          result = _context11.sent;\n          _context11.next = 6;\n          return put({\n            type: UNFOLLOW_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context11.next = 13;\n          break;\n\n        case 8:\n          _context11.prev = 8;\n          _context11.t0 = _context11[\"catch\"](0);\n          console.error(_context11.t0);\n          _context11.next = 13;\n          return put({\n            type: UNFOLLOW_FAILURE,\n            error: _context11.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11, null, [[0, 8]]);\n}\n\nfunction watchRemoveFollower() {\n  return _regeneratorRuntime.wrap(function watchRemoveFollower$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return takeLatest(REMOVE_FOLLOWER_REQUEST, removeFollower);\n\n        case 2:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12);\n}\n\nfunction watchLoadFollowers() {\n  return _regeneratorRuntime.wrap(function watchLoadFollowers$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.next = 2;\n          return takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\n\n        case 2:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13);\n}\n\nfunction watchLoadFollowings() {\n  return _regeneratorRuntime.wrap(function watchLoadFollowings$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          _context14.next = 2;\n          return takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\n\n        case 2:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, _marked14);\n}\n\nfunction watchChangeNickname() {\n  return _regeneratorRuntime.wrap(function watchChangeNickname$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          _context15.next = 2;\n          return takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n\n        case 2:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, _marked15);\n}\n\nfunction watchLoadMyInfo() {\n  return _regeneratorRuntime.wrap(function watchLoadMyInfo$(_context16) {\n    while (1) {\n      switch (_context16.prev = _context16.next) {\n        case 0:\n          _context16.next = 2;\n          return takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n\n        case 2:\n        case \"end\":\n          return _context16.stop();\n      }\n    }\n  }, _marked16);\n}\n\nfunction watchLoadUser() {\n  return _regeneratorRuntime.wrap(function watchLoadUser$(_context17) {\n    while (1) {\n      switch (_context17.prev = _context17.next) {\n        case 0:\n          _context17.next = 2;\n          return takeLatest(LOAD_USER_REQUEST, loadUser);\n\n        case 2:\n        case \"end\":\n          return _context17.stop();\n      }\n    }\n  }, _marked17);\n}\n\nfunction watchFollow() {\n  return _regeneratorRuntime.wrap(function watchFollow$(_context18) {\n    while (1) {\n      switch (_context18.prev = _context18.next) {\n        case 0:\n          _context18.next = 2;\n          return takeLatest(FOLLOW_REQUEST, follow);\n\n        case 2:\n        case \"end\":\n          return _context18.stop();\n      }\n    }\n  }, _marked18);\n} //로그인이라는 action이 실행될떄까지 기다리겠다.\n\n\nfunction watchUnfollow() {\n  return _regeneratorRuntime.wrap(function watchUnfollow$(_context19) {\n    while (1) {\n      switch (_context19.prev = _context19.next) {\n        case 0:\n          _context19.next = 2;\n          return takeLatest(UNFOLLOW_REQUEST, unfollow);\n\n        case 2:\n        case \"end\":\n          return _context19.stop();\n      }\n    }\n  }, _marked19);\n} //이벤트 리스너를 만드는거임\n\n\nfunction watchLogIn() {\n  return _regeneratorRuntime.wrap(function watchLogIn$(_context20) {\n    while (1) {\n      switch (_context20.prev = _context20.next) {\n        case 0:\n          _context20.next = 2;\n          return takeLatest(LOG_IN_REQUEST, logIn);\n\n        case 2:\n        case \"end\":\n          return _context20.stop();\n      }\n    }\n  }, _marked20);\n} //로그인이라는 action이 실행될떄까지 기다리겠다.\n\n\nfunction watchLogOut() {\n  return _regeneratorRuntime.wrap(function watchLogOut$(_context21) {\n    while (1) {\n      switch (_context21.prev = _context21.next) {\n        case 0:\n          _context21.next = 2;\n          return takeLatest(LOG_OUT_REQUEST, logOut);\n\n        case 2:\n        case \"end\":\n          return _context21.stop();\n      }\n    }\n  }, _marked21);\n}\n\nfunction watchSignUp() {\n  return _regeneratorRuntime.wrap(function watchSignUp$(_context22) {\n    while (1) {\n      switch (_context22.prev = _context22.next) {\n        case 0:\n          _context22.next = 2;\n          return takeLatest(SIGN_UP_REQUEST, signUp);\n\n        case 2:\n        case \"end\":\n          return _context22.stop();\n      }\n    }\n  }, _marked22);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context23) {\n    while (1) {\n      switch (_context23.prev = _context23.next) {\n        case 0:\n          _context23.next = 2;\n          return all([fork(watchRemoveFollower), fork(watchLoadFollowers), fork(watchLoadFollowings), fork(watchChangeNickname), fork(watchLoadMyInfo), fork(watchLoadUser), fork(watchFollow), fork(watchUnfollow), fork(watchLogIn), fork(watchLogOut), fork(watchSignUp)]);\n\n        case 2:\n        case \"end\":\n          return _context23.stop();\n      }\n    }\n  }, _marked23);\n}","map":{"version":3,"sources":["C:/Users/wngus/Documents/GitHub/ZeroCho/nodebird/prepare/front/sagas/user.js"],"names":["removeFollower","loadFollowers","loadFollowings","changeNickname","loadMyInfo","loadUser","logIn","logOut","signUp","follow","unfollow","watchRemoveFollower","watchLoadFollowers","watchLoadFollowings","watchChangeNickname","watchLoadMyInfo","watchLoadUser","watchFollow","watchUnfollow","watchLogIn","watchLogOut","watchSignUp","userSaga","all","fork","delay","put","takeLatest","call","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","FOLLOW_REQUEST","UNFOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWERS_FAILURE","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","REMOVE_FOLLOWER_REQUEST","REMOVE_FOLLOWER_SUCCESS","REMOVE_FOLLOWER_FAILURE","axios","removeFollowerAPI","data","action","result","type","console","error","response","loadFollowersAPI","get","loadFollowingsAPI","changeNicknameAPI","patch","nickname","loadMyInfoAPI","logUserAPI","logInAPI","post","log","logOutAPI","signUpAPI","followAPI","unfollowAPI","LOAD_MY_INFO_REQUEST"],"mappings":"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","sourcesContent":["import { all, fork, delay, put, takeLatest, call } from \"redux-saga/effects\";\r\n//여기안에 delay, debounce, throttle, takeLastest, takeEvery, takeMaybe 같은것도 있음\r\n//지금 적은것들이 사가의 effect라 불림\r\nimport {\r\n  LOAD_USER_REQUEST,\r\n  LOAD_USER_SUCCESS,\r\n  LOAD_USER_FAILURE,\r\n  LOG_IN_REQUEST,\r\n  LOG_IN_SUCCESS,\r\n  LOG_IN_FAILURE,\r\n  LOG_OUT_REQUEST,\r\n  LOG_OUT_SUCCESS,\r\n  LOG_OUT_FAILURE,\r\n  SIGN_UP_REQUEST,\r\n  SIGN_UP_SUCCESS,\r\n  SIGN_UP_FAILURE,\r\n  FOLLOW_REQUEST,\r\n  UNFOLLOW_REQUEST,\r\n  FOLLOW_SUCCESS,\r\n  FOLLOW_FAILURE,\r\n  UNFOLLOW_SUCCESS,\r\n  UNFOLLOW_FAILURE,\r\n  CHANGE_NICKNAME_REQUEST,\r\n  CHANGE_NICKNAME_SUCCESS,\r\n  CHANGE_NICKNAME_FAILURE,\r\n  LOAD_FOLLOWERS_REQUEST,\r\n  LOAD_FOLLOWINGS_REQUEST,\r\n  LOAD_FOLLOWERS_SUCCESS,\r\n  LOAD_FOLLOWERS_FAILURE,\r\n  LOAD_FOLLOWINGS_SUCCESS,\r\n  LOAD_FOLLOWINGS_FAILURE,\r\n  REMOVE_FOLLOWER_REQUEST,\r\n  REMOVE_FOLLOWER_SUCCESS,\r\n  REMOVE_FOLLOWER_FAILURE,\r\n} from \"../reducers/user\";\r\nimport axios from \"axios\";\r\n//이거는 컴바인 리듀스 같은게 필요 없음.\r\n\r\nfunction removeFollowerAPI(data) {\r\n  return axios.delete(`/user/follower/${data}`);\r\n} //몇번 팔로우를 제거한다\r\nfunction* removeFollower(action) {\r\n  try {\r\n    const result = yield call(removeFollowerAPI, action.data);\r\n    yield put({\r\n      type: REMOVE_FOLLOWER_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: REMOVE_FOLLOWER_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadFollowersAPI(data) {\r\n  return axios.get(\"/user/followers\", data);\r\n}\r\nfunction* loadFollowers(action) {\r\n  try {\r\n    const result = yield call(loadFollowersAPI, action.data);\r\n    yield put({\r\n      type: LOAD_FOLLOWERS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: LOAD_FOLLOWERS_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadFollowingsAPI(data) {\r\n  return axios.get(\"/user/followings\", data);\r\n}\r\nfunction* loadFollowings(action) {\r\n  try {\r\n    const result = yield call(loadFollowingsAPI, action.data);\r\n    yield put({\r\n      type: LOAD_FOLLOWINGS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: LOAD_FOLLOWINGS_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction changeNicknameAPI(data) {\r\n  return axios.patch(\"/user/nickname\", { nickname: data });\r\n}\r\nfunction* changeNickname(action) {\r\n  try {\r\n    const result = yield call(changeNicknameAPI, action.data);\r\n    yield put({\r\n      type: CHANGE_NICKNAME_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: CHANGE_NICKNAME_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadMyInfoAPI() {\r\n  return axios.get(\"/user\");\r\n}\r\nfunction* loadMyInfo(action) {\r\n  try {\r\n    const result = yield call(loadMyInfoAPI, action.data);\r\n    yield put({\r\n      type: LOAD_USER_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_USER_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\n//get,delete는 데이터가 없기 떄문에, 두번째 자리가 withCredential자리, 근데\r\n//saga에서 공통 설정 해줬음\r\nfunction logUserAPI() {\r\n  return axios.get(\"/user\");\r\n}\r\nfunction* loadUser(action) {\r\n  try {\r\n    const result = yield call(logUserAPI, action.data);\r\n    yield put({\r\n      type: LOAD_USER_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_USER_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\n//logInAPI이거는 generator안임. * 붙이면 안됨\r\nfunction logInAPI(data) {\r\n  return axios.post(\"/user/login\", data); //로그인 요청 함\r\n}\r\n\r\n//항상 effect 앞에는 yield(일드)를 붙여준다\r\n//call, fork차이, fork는 비동기 함수 호출, call은 동기함수 호출\r\n//call을 하면 로그인 api가 리턴 할때까지 기다림. fork는 비동기라 요청보내버리고\r\n//결과 안 기다리고 바로 다음으로 감, call은 await이랑 비슷\r\n\r\n//그리고 데이터를 보낼때 logInAPI(action.data) 이렇게 해야하는데, call을 쓰면\r\n// 이걸 펼쳐줘야함 call(logInAPI, action.data); 밑에 처럼 이렇게\r\n//첫번쨰 자리가 함수고, 그 다음에 매개변수, 인수임 ,를 써서 더 주기 가능\r\n//굳이 yield를 안 붙여도되지만 붙이는 이유가 테스트 때문, 동작 보장이 되는가?\r\nfunction* logIn(action) {\r\n  try {\r\n    console.log(\"Saga User.js\");\r\n    const result = yield call(logInAPI, action.data); //이렇게 결과값 요청후 받음\r\n    // yield delay(1000); //서버 만들어 질때까지 delay로 비동기 효과 주기\r\n    yield put({\r\n      type: LOG_IN_SUCCESS, //put은 dispatch라고 생각하면됨\r\n      data: result.data, //성공 결과값, 성공후 reducer user.js switch로\r\n    }); //중요한게 사가에서 자동으로 try,catch로 상황보고 석세스나\r\n    //failure보내기 때문에 개인이 따로 액션을 할 필요가 없다\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOG_IN_FAILURE,\r\n      error: err.response.data,\r\n    }); //요청이 항상 성공하는건 아니니까, try, catch 쓰면됨\r\n  }\r\n}\r\n//애네들이 비동기 액션 크리에이터, thunk는 비동기 크리에이터를 직접 했지만\r\n//Saga는 이벤트 리스너 같은 역할, 비유 하자면\r\n//로그인 액션이 들어오면,로그인 제너레이터 함수를 실행 하도록, * 있는게 제너레이터 함수\r\n\r\n//take는 문제가 1회성임. 로그인하고 로그아웃하면 로그인 이벤트가 사라진다는 말\r\n//그래서 while을 사용하는거임. 이걸해야 진정한 이벤트 리스너 ㅋㅋ (원노트 참조)\r\n//근데 반복문 적는건 좀 보기 안 좋고 더 좋은 기능인 takeEvery를 사용\r\n//takeLatest 는 마지막에 클릭한거. (로딩 도중 기준) 여러번 클릭 방지, 첫번째꺼는 takeLeading\r\n\r\nfunction logOutAPI() {\r\n  return axios.post(\"/user/logout\"); //로그인 요청 함\r\n}\r\nfunction* logOut() {\r\n  try {\r\n    yield call(logOutAPI);\r\n    yield put({\r\n      type: LOG_OUT_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: LOG_OUT_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction signUpAPI(data) {\r\n  return axios.post(\"/user\", data); //로그인 요청 함\r\n} //data안에 Email, Password, NickName 가 들어있다. signup.js 참조\r\n//get이랑 delete요청은 데이터를 못 보내지만, post,put,patch는 넘길수 있다. 두번째로\r\nfunction* signUp(action) {\r\n  try {\r\n    const result = yield call(signUpAPI, action.data);\r\n    //yield delay(1000); //throw new Error(\"\")를 하게 되면 바로 밑에 catch로 간다\r\n    console.log(result);\r\n    yield put({\r\n      type: SIGN_UP_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: SIGN_UP_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction followAPI(data) {\r\n  return axios.patch(`/user/${data}/follow`);\r\n} //data에 사용자 id넣어줌\r\nfunction* follow(action) {\r\n  try {\r\n    const result = yield call(followAPI, action.data);\r\n    //throw new Error(\"\")를 하게 되면 바로 밑에 catch로 간다\r\n    yield put({\r\n      type: FOLLOW_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: FOLLOW_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction unfollowAPI(data) {\r\n  return axios.delete(`/user/${data}/follow`); //로그인 요청 함\r\n} //data에 사용자 id넣어줌\r\nfunction* unfollow(action) {\r\n  try {\r\n    const result = yield call(unfollowAPI, action.data);\r\n    //throw new Error(\"\")를 하게 되면 바로 밑에 catch로 간다\r\n    yield put({\r\n      type: UNFOLLOW_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: UNFOLLOW_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchRemoveFollower() {\r\n  yield takeLatest(REMOVE_FOLLOWER_REQUEST, removeFollower);\r\n}\r\n\r\nfunction* watchLoadFollowers() {\r\n  yield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\r\n}\r\n\r\nfunction* watchLoadFollowings() {\r\n  yield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\r\n}\r\n\r\nfunction* watchChangeNickname() {\r\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\r\n}\r\nfunction* watchLoadMyInfo() {\r\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\r\n}\r\nfunction* watchLoadUser() {\r\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\r\n}\r\n\r\nfunction* watchFollow() {\r\n  yield takeLatest(FOLLOW_REQUEST, follow);\r\n} //로그인이라는 action이 실행될떄까지 기다리겠다.\r\n\r\nfunction* watchUnfollow() {\r\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\n\r\n//이벤트 리스너를 만드는거임\r\nfunction* watchLogIn() {\r\n  yield takeLatest(LOG_IN_REQUEST, logIn);\r\n} //로그인이라는 action이 실행될떄까지 기다리겠다.\r\n\r\nfunction* watchLogOut() {\r\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\n\r\nfunction* watchSignUp() {\r\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([\r\n    fork(watchRemoveFollower),\r\n    fork(watchLoadFollowers),\r\n    fork(watchLoadFollowings),\r\n    fork(watchChangeNickname),\r\n    fork(watchLoadMyInfo),\r\n    fork(watchLoadUser),\r\n    fork(watchFollow),\r\n    fork(watchUnfollow),\r\n    fork(watchLogIn),\r\n    fork(watchLogOut),\r\n    fork(watchSignUp),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}