{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React, { useCallback, useRef, useEffect } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addPost, UPLOAD_IMAGES_REQUEST, REMOVE_IMAGE, ADD_POST_REQUEST } from \"../reducers/post\";\nimport useinput from \"../hooks/useinput\"; // const { Input } = require(\"antd\");\n\nconst PostForm = () => {\n  const dispatch = useDispatch();\n  const {\n    imagePaths,\n    addPostLoading,\n    addPostDone\n  } = useSelector(state => state.post);\n  const [text, onChangeText, setText] = useinput(\"\");\n  useEffect(() => {\n    if (addPostDone) {\n      setText(\"\");\n    }\n  }, [addPostDone]);\n  const onSubmit = useCallback(() => {\n    if (!text || !text.trim()) {\n      return alert(\"投稿を作成してください。\");\n    }\n\n    const formData = new FormData();\n    imagePaths.forEach(p => {\n      formData.append(\"image\", p); //key가 image / req.body.image\n    });\n    formData.append(\"content\", text); //key가 content / req.body.content\n\n    return dispatch({\n      type: ADD_POST_REQUEST,\n      data: formData\n    });\n  }, [text, imagePaths]);\n  const imageInput = useRef();\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  const onChangeImages = useCallback(e => {\n    console.log(\"images\", e.target.files); //여기안에 이미지 파일 정보가 들어있음\n\n    const imageFormData = new FormData(); //이미지를 multipart로 안 올리면 multer가 처리를 안함\n\n    [].forEach.call(e.target.files, f => {\n      imageFormData.append(\"image\", f); //앞에 image는 키다 router에서 image 문자일치 해야함\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData\n    });\n  }, []);\n  const onRemoveImage = useCallback(index => () => {\n    dispatch({\n      type: REMOVE_IMAGE,\n      data: index\n    });\n  });\n  return (\n    /*#__PURE__*/\n    //encType=\"multipart/form-data\" 이거는 이미지 올리면 이 형식으로 올라간다고\n    //밑에 imageInput에서 전달된게 upload.array로 전달이 된다\n    _jsxs(Form, {\n      style: {\n        margin: \"10px 0 20px\"\n      },\n      encType: \"multipart/form-data\",\n      onFinish: onSubmit,\n      children: [/*#__PURE__*/_jsx(Input.TextArea, {\n        value: text,\n        onChange: onChangeText,\n        maxLength: 140,\n        placeholder: \"\\u3069\\u3093\\u306A\\u4E8B\\u4EF6\\u304C\\u3042\\u308A\\u307E\\u3057\\u305F\\u304B\\u3002\"\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"input\", {\n          type: \"file\",\n          name: \"image\",\n          multiple: true,\n          hidden: true,\n          ref: imageInput,\n          onChange: onChangeImages\n        }), /*#__PURE__*/_jsx(Button, {\n          onClick: onClickImageUpload,\n          children: \"\\u30A4\\u30E1\\u30FC\\u30B8\\u30A2\\u30C3\\u30D7\\u30ED\\u30FC\\u30C9\"\n        }), /*#__PURE__*/_jsx(Button, {\n          type: \"primary\",\n          style: {\n            float: \"right\"\n          },\n          htmlType: \"submit\",\n          children: \"\\u6295\\u7A3F\"\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        children: imagePaths.map((v, i) => /*#__PURE__*/_jsxs(\"div\", {\n          style: {\n            display: \"inline-block\"\n          },\n          children: [/*#__PURE__*/_jsx(\"img\", {\n            src: `http://localhost:3065/${v}`,\n            style: {\n              width: \"200px\"\n            },\n            alt: v\n          }), /*#__PURE__*/_jsx(\"div\", {\n            children: /*#__PURE__*/_jsx(Button, {\n              onClick: onRemoveImage(i),\n              children: \"\\u524A\\u9664\"\n            })\n          })]\n        }, v))\n      })]\n    })\n  );\n};\n\nexport default PostForm; //hidden은 밑에 다른 Button (이미지 삽입) 을 사용하기 위해서 안보이게 한것","map":null,"metadata":{},"sourceType":"module"}