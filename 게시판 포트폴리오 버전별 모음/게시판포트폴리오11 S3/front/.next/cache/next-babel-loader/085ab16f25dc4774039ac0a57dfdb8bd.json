{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\wngus\\\\Documents\\\\GitHub\\\\portfolio-japanese\\\\prepare\\\\front\\\\pages\\\\profile.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport Head from \"next/head\";\nimport { useSelector } from \"react-redux\";\nimport Router from \"next/router\";\nimport axios from \"axios\";\nimport useSWR from \"swr\";\nimport AppLayout from \"../components/AppLayout\";\nimport NicknameEditForm from \"../components/NicknameEditForm\";\nimport FollowList from \"../components/FollowList\";\n\nvar fetcher = function fetcher(url) {\n  return axios.get(url, {\n    withCredentials: true\n  }).then(function (result) {\n    return result.data;\n  });\n};\n\nvar Profile = function Profile() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var _useState = useState(3),\n      followersLimit = _useState[0],\n      setFollowersLimit = _useState[1];\n\n  var _useState2 = useState(3),\n      followingsLimit = _useState2[0],\n      setFollowingsLimit = _useState2[1];\n\n  var _useSWR = useSWR(\"http://localhost:3065/user/followers?limit=\".concat(followersLimit), fetcher),\n      followersData = _useSWR.data,\n      followerError = _useSWR.error;\n\n  var _useSWR2 = useSWR(\"http://localhost:3065/user/followings?limit=\".concat(followingsLimit), fetcher),\n      followingsData = _useSWR2.data,\n      followingError = _useSWR2.error; //fetcher가 이 주소에 대해 어떻게 가져올지 ㅋ , 앞에 data, error가 없으면 로딩중\n  //둘중 하나가 있으면 성공했거나 실패했거나\n\n\n  useEffect(function () {\n    if (!(me && me.id)) {\n      Router.push(\"/\");\n    }\n  }, [me && me.id]);\n  var loadMoreFollowings = useCallback(function () {\n    setFollowingsLimit(function (prev) {\n      return prev + 3;\n    });\n  }, []);\n  var loadMoreFollowers = useCallback(function () {\n    setFollowersLimit(function (prev) {\n      return prev + 3;\n    });\n  }, []);\n\n  if (!me) {\n    //로그인 안하면 profile페이지 못가게\n    return \"私の情報ローディング中\";\n  }\n\n  if (followerError || followingError) {\n    console.error(followerError || followingError);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Following/Follower \\u30ED\\u30FC\\u30C7\\u30A3\\u30F3\\u30B0\\u4E2D\\u3001\\u30A8\\u30E9\\u30FC\\u304C\\u767A\\u751F\\u3057\\u307E\\u3057\\u305F\\u3002\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"\\u79C1\\u306E\\u30D7\\u30ED\\u30D5\\u30A3\\u30FC\\u30EB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(AppLayout, {\n      children: [/*#__PURE__*/_jsxDEV(NicknameEditForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(FollowList, {\n        header: \"Following\",\n        data: followingsData,\n        onClickMore: loadMoreFollowings,\n        loading: !followingsData && !followingError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(FollowList, {\n        header: \"Follower\",\n        data: followersData,\n        onClickMore: loadMoreFollowers,\n        loading: !followersData && !followerError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Profile, \"PHI5m2O7dl5iAHaAwI/SxEdN4ck=\", false, function () {\n  return [useSelector, useSWR, useSWR];\n});\n\n_c = Profile;\n//서버사이드랜더링이 request가 success될떄까지 기다려주는거\nexport var __N_SSP = true;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["C:/Users/wngus/Documents/GitHub/portfolio-japanese/prepare/front/pages/profile.js"],"names":["React","useEffect","useState","useCallback","Head","useSelector","Router","axios","useSWR","AppLayout","NicknameEditForm","FollowList","fetcher","url","get","withCredentials","then","result","data","Profile","state","user","me","followersLimit","setFollowersLimit","followingsLimit","setFollowingsLimit","followersData","followerError","error","followingsData","followingError","id","push","loadMoreFollowings","prev","loadMoreFollowers","console"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\r\nimport Head from \"next/head\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Router from \"next/router\";\r\nimport { END } from \"redux-saga\";\r\nimport axios from \"axios\";\r\nimport useSWR from \"swr\";\r\n\r\nimport AppLayout from \"../components/AppLayout\";\r\nimport NicknameEditForm from \"../components/NicknameEditForm\";\r\nimport FollowList from \"../components/FollowList\";\r\nimport { LOAD_MY_INFO_REQUEST } from \"../reducers/user\";\r\nimport wrapper from \"../store/configureStore\";\r\n\r\nconst fetcher = (url) => axios.get(url, { withCredentials: true }).then((result) => result.data);\r\n\r\nconst Profile = () => {\r\n  const { me } = useSelector((state) => state.user);\r\n  const [followersLimit, setFollowersLimit] = useState(3);\r\n  const [followingsLimit, setFollowingsLimit] = useState(3);\r\n\r\n  const { data: followersData, error: followerError } = useSWR(\r\n    `http://localhost:3065/user/followers?limit=${followersLimit}`,\r\n    fetcher\r\n  );\r\n  const { data: followingsData, error: followingError } = useSWR(\r\n    `http://localhost:3065/user/followings?limit=${followingsLimit}`,\r\n    fetcher\r\n  );\r\n  //fetcher가 이 주소에 대해 어떻게 가져올지 ㅋ , 앞에 data, error가 없으면 로딩중\r\n  //둘중 하나가 있으면 성공했거나 실패했거나\r\n\r\n  useEffect(() => {\r\n    if (!(me && me.id)) {\r\n      Router.push(\"/\");\r\n    }\r\n  }, [me && me.id]);\r\n\r\n  const loadMoreFollowings = useCallback(() => {\r\n    setFollowingsLimit((prev) => prev + 3);\r\n  }, []);\r\n  const loadMoreFollowers = useCallback(() => {\r\n    setFollowersLimit((prev) => prev + 3);\r\n  }, []);\r\n\r\n  if (!me) {\r\n    //로그인 안하면 profile페이지 못가게\r\n    return \"私の情報ローディング中\";\r\n  }\r\n  if (followerError || followingError) {\r\n    console.error(followerError || followingError);\r\n    return <div>Following/Follower ローディング中、エラーが発生しました。</div>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>私のプロフィール</title>\r\n      </Head>\r\n      <AppLayout>\r\n        <NicknameEditForm />\r\n        <FollowList\r\n          header=\"Following\"\r\n          data={followingsData}\r\n          onClickMore={loadMoreFollowings}\r\n          loading={!followingsData && !followingError}\r\n        />\r\n        <FollowList\r\n          header=\"Follower\"\r\n          data={followersData}\r\n          onClickMore={loadMoreFollowers}\r\n          loading={!followersData && !followerError}\r\n        />\r\n      </AppLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  console.log(\"getServerSideProps start\");\r\n  console.log(\"context\", context);\r\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n  const cookie = context.req ? context.req.headers.cookie : \"\"; //이걸 해야 서버쪽으로 쿠키가 전달이됨\r\n  axios.defaults.headers.Cookie = \"\"; //이걸 해야 서버쪽으로 쿠키가 전달이됨\r\n  if (context.req && cookie) {\r\n    //서버일때랑 쿠키가 있을때 , 이런게 아니면 위에 \"\" //이렇게 안하면 서버에서 쿠키가 공유되서 다른사람이 내 아이디로 로그인되는\r\n    axios.defaults.headers.Cookie = cookie;\r\n  } //저희가 실제로 쿠키를 써서 요청을 보낼때만 잠깐 쿠키를 넣어놧다가 쿠키를 안써서 요청보낼때는 서버에서 공유하고 있는 쿠키를 제거하는 이부분이 제일 중요\r\n  ////////////////////////////////////////////////////////////////////////////////////////\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  context.store.dispatch(END); //next redux wrapper에 이렇게 하라고 적혀있음\r\n  console.log(\"getServerSideProps end\");\r\n  await context.store.sagaTask.toPromise(); //이거는 configurestore에. sagaTask등록한거\r\n}); //서버사이드랜더링이 request가 success될떄까지 기다려주는거\r\n\r\nexport default Profile;\r\n"]},"metadata":{},"sourceType":"module"}