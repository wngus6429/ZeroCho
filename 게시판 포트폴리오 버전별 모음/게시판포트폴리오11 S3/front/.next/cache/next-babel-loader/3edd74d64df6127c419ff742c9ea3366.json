{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\wngus\\\\Documents\\\\GitHub\\\\ZeroCho\\\\nodebird\\\\prepare\\\\front\\\\components\\\\FollowList.js\";\nimport React from \"react\";\nimport { Button, Card, List } from \"antd\";\nimport Proptypes from \"prop-types\";\nimport { StopTwoTone } from \"@ant-design/icons\";\nimport { useDispatch } from \"react-redux\";\nimport { UNFOLLOW_REQUEST, REMOVE_FOLLOWER_REQUEST } from \"../reducers/user\";\n\nconst FollowList = ({\n  header,\n  data,\n  onClickMore,\n  loading\n}) => {\n  const dispatch = useDispatch();\n\n  const onCancel = id => () => {\n    if (header === \"팔로잉\") {\n      dispatch({\n        type: UNFOLLOW_REQUEST,\n        data: id\n      });\n    } else {\n      dispatch({\n        //이건 팔로워\n        type: REMOVE_FOLLOWER_REQUEST,\n        data: id\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(List, {\n    style: {\n      marginBottom: 20\n    },\n    grid: {\n      gutter: 4,\n      xs: 2,\n      md: 3\n    },\n    size: \"small\",\n    header: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: header\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }, this),\n    loadMore: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\",\n        margin: \"10px 0\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: on,\n        children: \"\\uB354 \\uBCF4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this),\n    bordered: true,\n    dataSource: data,\n    renderItem: item => /*#__PURE__*/_jsxDEV(List.Item, {\n      style: {\n        marginTop: 20\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        actions: [/*#__PURE__*/_jsxDEV(StopTwoTone, {\n          onClick: onCancel(item.id)\n        }, \"stop\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 27\n        }, this)],\n        children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n          description: item.nickname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}; //반복문 안에서 onclick있으면 반복문에 대한 데이터를 onClick으로 넘겨줘야함\n\n\nFollowList.propTypes = {\n  header: Proptypes.string.isRequired,\n  data: Proptypes.array.isRequired,\n  onClickMore: Proptypes.func.isRequired,\n  loading: Proptypes.bool.isRequired\n};\nexport default FollowList; // dataSource={data} 여기 부분에서 데이터를 profile.js로 부터 받아 밑에 renderItem에 넘겨주는거\n// renderItem={(item) => (","map":{"version":3,"sources":["C:/Users/wngus/Documents/GitHub/ZeroCho/nodebird/prepare/front/components/FollowList.js"],"names":["React","Button","Card","List","Proptypes","StopTwoTone","useDispatch","UNFOLLOW_REQUEST","REMOVE_FOLLOWER_REQUEST","FollowList","header","data","onClickMore","loading","dispatch","onCancel","id","type","marginBottom","gutter","xs","md","textAlign","margin","on","item","marginTop","nickname","propTypes","string","isRequired","array","func","bool"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,IAAvB,QAAmC,MAAnC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,gBAAT,EAA2BC,uBAA3B,QAA0D,kBAA1D;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,IAAV;AAAgBC,EAAAA,WAAhB;AAA6BC,EAAAA;AAA7B,CAAD,KAA4C;AAC7D,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;;AACA,QAAMS,QAAQ,GAAIC,EAAD,IAAQ,MAAM;AAC7B,QAAIN,MAAM,KAAK,KAAf,EAAsB;AACpBI,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAEV,gBADC;AAEPI,QAAAA,IAAI,EAAEK;AAFC,OAAD,CAAR;AAID,KALD,MAKO;AACLF,MAAAA,QAAQ,CAAC;AACP;AACAG,QAAAA,IAAI,EAAET,uBAFC;AAGPG,QAAAA,IAAI,EAAEK;AAHC,OAAD,CAAR;AAKD;AACF,GAbD;;AAcA,sBACE,QAAC,IAAD;AACE,IAAA,KAAK,EAAE;AAAEE,MAAAA,YAAY,EAAE;AAAhB,KADT;AAEE,IAAA,IAAI,EAAE;AAAEC,MAAAA,MAAM,EAAE,CAAV;AAAaC,MAAAA,EAAE,EAAE,CAAjB;AAAoBC,MAAAA,EAAE,EAAE;AAAxB,KAFR;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,MAAM,eAAE;AAAA,gBAAMX;AAAN;AAAA;AAAA;AAAA;AAAA,YAJV;AAKE,IAAA,QAAQ,eACN;AAAK,MAAA,KAAK,EAAE;AAAEY,QAAAA,SAAS,EAAE,QAAb;AAAuBC,QAAAA,MAAM,EAAE;AAA/B,OAAZ;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANJ;AAUE,IAAA,QAAQ,MAVV;AAWE,IAAA,UAAU,EAAEb,IAXd;AAYE,IAAA,UAAU,EAAGc,IAAD,iBACV,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAlB;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,OAAO,EAAE,cAAC,QAAC,WAAD;AAAwB,UAAA,OAAO,EAAEX,QAAQ,CAACU,IAAI,CAACT,EAAN;AAAzC,WAAiB,MAAjB;AAAA;AAAA;AAAA;AAAA,gBAAD,CAAf;AAAA,+BACE,QAAC,IAAD,CAAM,IAAN;AAAW,UAAA,WAAW,EAAES,IAAI,CAACE;AAA7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAbJ;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAtCD,C,CAuCA;;;AAEAlB,UAAU,CAACmB,SAAX,GAAuB;AACrBlB,EAAAA,MAAM,EAAEN,SAAS,CAACyB,MAAV,CAAiBC,UADJ;AAErBnB,EAAAA,IAAI,EAAEP,SAAS,CAAC2B,KAAV,CAAgBD,UAFD;AAGrBlB,EAAAA,WAAW,EAAER,SAAS,CAAC4B,IAAV,CAAeF,UAHP;AAIrBjB,EAAAA,OAAO,EAAET,SAAS,CAAC6B,IAAV,CAAeH;AAJH,CAAvB;AAOA,eAAerB,UAAf,C,CAEA;AACA","sourcesContent":["import React from \"react\";\r\nimport { Button, Card, List } from \"antd\";\r\nimport Proptypes from \"prop-types\";\r\nimport { StopTwoTone } from \"@ant-design/icons\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { UNFOLLOW_REQUEST, REMOVE_FOLLOWER_REQUEST } from \"../reducers/user\";\r\n\r\nconst FollowList = ({ header, data, onClickMore, loading }) => {\r\n  const dispatch = useDispatch();\r\n  const onCancel = (id) => () => {\r\n    if (header === \"팔로잉\") {\r\n      dispatch({\r\n        type: UNFOLLOW_REQUEST,\r\n        data: id,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        //이건 팔로워\r\n        type: REMOVE_FOLLOWER_REQUEST,\r\n        data: id,\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <List\r\n      style={{ marginBottom: 20 }}\r\n      grid={{ gutter: 4, xs: 2, md: 3 }}\r\n      size=\"small\"\r\n      header={<div>{header}</div>}\r\n      loadMore={\r\n        <div style={{ textAlign: \"center\", margin: \"10px 0\" }}>\r\n          <Button onClick={on}>더 보기</Button>\r\n        </div>\r\n      }\r\n      bordered\r\n      dataSource={data}\r\n      renderItem={(item) => (\r\n        <List.Item style={{ marginTop: 20 }}>\r\n          <Card actions={[<StopTwoTone key=\"stop\" onClick={onCancel(item.id)} />]}>\r\n            <Card.Meta description={item.nickname} />\r\n          </Card>\r\n        </List.Item>\r\n      )}\r\n    ></List>\r\n  );\r\n};\r\n//반복문 안에서 onclick있으면 반복문에 대한 데이터를 onClick으로 넘겨줘야함\r\n\r\nFollowList.propTypes = {\r\n  header: Proptypes.string.isRequired,\r\n  data: Proptypes.array.isRequired,\r\n  onClickMore: Proptypes.func.isRequired,\r\n  loading: Proptypes.bool.isRequired,\r\n};\r\n\r\nexport default FollowList;\r\n\r\n// dataSource={data} 여기 부분에서 데이터를 profile.js로 부터 받아 밑에 renderItem에 넘겨주는거\r\n// renderItem={(item) => (\r\n"]},"metadata":{},"sourceType":"module"}