{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from \"react\";\nimport { Button, Card, List } from \"antd\";\nimport { StopTwoTone } from \"@ant-design/icons\";\nimport { useDispatch } from \"react-redux\";\nimport { UNFOLLOW_REQUEST, REMOVE_FOLLOWER_REQUEST } from \"../reducers/user\";\n\nvar FollowList = function FollowList(_ref) {\n  var header = _ref.header,\n      data = _ref.data,\n      onClickMore = _ref.onClickMore,\n      loading = _ref.loading;\n  var dispatch = useDispatch();\n\n  var onCancel = function onCancel(id) {\n    return function () {\n      if (header === \"Following\") {\n        dispatch({\n          type: UNFOLLOW_REQUEST,\n          data: id\n        });\n      } else {\n        dispatch({\n          //이건 팔로워\n          type: REMOVE_FOLLOWER_REQUEST,\n          data: id\n        });\n      }\n    };\n  };\n\n  return /*#__PURE__*/_jsx(List, {\n    style: {\n      marginBottom: 20\n    },\n    grid: {\n      gutter: 4,\n      xs: 2,\n      md: 3\n    },\n    size: \"small\",\n    header: /*#__PURE__*/_jsx(\"div\", {\n      children: header\n    }),\n    loadMore: /*#__PURE__*/_jsx(\"div\", {\n      style: {\n        textAlign: \"center\",\n        margin: \"10px 0\"\n      },\n      children: /*#__PURE__*/_jsx(Button, {\n        onClick: onClickMore,\n        loading: loading,\n        children: \"\\u3082\\u3063\\u3068\"\n      })\n    }),\n    bordered: true,\n    dataSource: data,\n    renderItem: function renderItem(item) {\n      return /*#__PURE__*/_jsx(List.Item, {\n        style: {\n          marginTop: 20\n        },\n        children: /*#__PURE__*/_jsx(Card, {\n          actions: [/*#__PURE__*/_jsx(StopTwoTone, {\n            onClick: onCancel(item.id)\n          }, \"stop\")],\n          children: /*#__PURE__*/_jsx(Card.Meta, {\n            description: item.nickname\n          })\n        })\n      });\n    }\n  });\n}; //반복문 안에서 onclick있으면 반복문에 대한 데이터를 onClick으로 넘겨줘야함\n\n\nexport default FollowList; // dataSource={data} 여기 부분에서 데이터를 profile.js로 부터 받아 밑에 renderItem에 넘겨주는거\n// renderItem={(item) => (","map":null,"metadata":{},"sourceType":"module"}