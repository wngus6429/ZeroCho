{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React, { useState } from \"react\";\nimport Slick from \"react-slick\";\nimport { Overlay, Global, Header, CloseBtn, ImgWrapper, Indicator, SlickWrapper } from \"./styles\";\n\nconst ImagesZoom = ({\n  images,\n  onClose\n}) => {\n  const {\n    0: currentSlide,\n    1: setcurrentSlide\n  } = useState(0);\n  return /*#__PURE__*/_jsxs(Overlay, {\n    children: [/*#__PURE__*/_jsx(Global, {}), /*#__PURE__*/_jsxs(Header, {\n      children: [/*#__PURE__*/_jsx(\"h1\", {\n        children: \"\\u8A73\\u7D30\\u30A4\\u30E1\\u30FC\\u30B8\"\n      }), /*#__PURE__*/_jsx(CloseBtn, {\n        onClick: onClose,\n        children: \"X\"\n      })]\n    }), /*#__PURE__*/_jsx(SlickWrapper, {\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(Slick, {\n          initialSlide: 0,\n          afterChange: slide => setcurrentSlide(slide),\n          infinite: true,\n          arrows: true,\n          slidesToShow: 1,\n          slidesToScroll: 1,\n          children: images.map(v => /*#__PURE__*/_jsx(ImgWrapper, {\n            children: /*#__PURE__*/_jsx(\"img\", {\n              style: {\n                maxHeight: \"700px\"\n              },\n              src: `http://localhost:3065/${v.src}`,\n              alt: v.src\n            })\n          }, v.src))\n        }), /*#__PURE__*/_jsx(Indicator, {\n          children: /*#__PURE__*/_jsxs(\"div\", {\n            children: [currentSlide + 1, \"\", \"/\", images.length]\n          })\n        })]\n      })\n    })]\n  });\n};\n\nexport default ImagesZoom; //initialSlide={0}첫번쨰 사진은 무엇으로\n//afterChange={(slide) => setcurrentSlide} 페이지를 넘길때 마다 번호를줌\n//infinite는 끝에서 더 넘기면 처음걸로감 , arrow는 화살표 사라짐, 무조건 클릭해서 넘겨야함\n//스타일은 중요한 부분이 아니기에 styles.js에서 받아 오는걸로 하는거\n//거기에 export 했으니 다른데서 쉽게 가져다 쓸수 있음\n//이건 제일 중요한 로직이니 index.js 로 한것","map":{"version":3,"sources":["C:/Users/wngus/Documents/GitHub/portfolio-japanese/prepare/front/components/imagesZoom/index.js"],"names":["React","useState","Slick","Overlay","Global","Header","CloseBtn","ImgWrapper","Indicator","SlickWrapper","ImagesZoom","images","onClose","currentSlide","setcurrentSlide","slide","map","v","maxHeight","src","length"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,OAAT,EAAkBC,MAAlB,EAA0BC,MAA1B,EAAkCC,QAAlC,EAA4CC,UAA5C,EAAwDC,SAAxD,EAAmEC,YAAnE,QAAuF,UAAvF;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAAyB;AAC1C,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkCb,QAAQ,CAAC,CAAD,CAAhD;AACA,sBACE,MAAC,OAAD;AAAA,4BACE,KAAC,MAAD,KADF,eAEE,MAAC,MAAD;AAAA,8BACE;AAAA;AAAA,QADF,eAEE,KAAC,QAAD;AAAU,QAAA,OAAO,EAAEW,OAAnB;AAAA;AAAA,QAFF;AAAA,MAFF,eAME,KAAC,YAAD;AAAA,6BACE;AAAA,gCACE,KAAC,KAAD;AACE,UAAA,YAAY,EAAE,CADhB;AAEE,UAAA,WAAW,EAAGG,KAAD,IAAWD,eAAe,CAACC,KAAD,CAFzC;AAGE,UAAA,QAAQ,MAHV;AAIE,UAAA,MAAM,EAAE,IAJV;AAKE,UAAA,YAAY,EAAE,CALhB;AAME,UAAA,cAAc,EAAE,CANlB;AAAA,oBAQGJ,MAAM,CAACK,GAAP,CAAYC,CAAD,iBACV,KAAC,UAAD;AAAA,mCACE;AAAK,cAAA,KAAK,EAAE;AAAEC,gBAAAA,SAAS,EAAE;AAAb,eAAZ;AAAoC,cAAA,GAAG,EAAG,yBAAwBD,CAAC,CAACE,GAAI,EAAxE;AAA2E,cAAA,GAAG,EAAEF,CAAC,CAACE;AAAlF;AADF,aAAiBF,CAAC,CAACE,GAAnB,CADD;AARH,UADF,eAeE,KAAC,SAAD;AAAA,iCACE;AAAA,uBACGN,YAAY,GAAG,CADlB,EAEG,EAFH,OAEQF,MAAM,CAACS,MAFf;AAAA;AADF,UAfF;AAAA;AADF,MANF;AAAA,IADF;AAiCD,CAnCD;;AAyCA,eAAeV,UAAf,C,CACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Slick from \"react-slick\";\r\nimport { Overlay, Global, Header, CloseBtn, ImgWrapper, Indicator, SlickWrapper } from \"./styles\";\r\n\r\nconst ImagesZoom = ({ images, onClose }) => {\r\n  const [currentSlide, setcurrentSlide] = useState(0);\r\n  return (\r\n    <Overlay>\r\n      <Global />\r\n      <Header>\r\n        <h1>詳細イメージ</h1>\r\n        <CloseBtn onClick={onClose}>X</CloseBtn>\r\n      </Header>\r\n      <SlickWrapper>\r\n        <div>\r\n          <Slick\r\n            initialSlide={0}\r\n            afterChange={(slide) => setcurrentSlide(slide)}\r\n            infinite\r\n            arrows={true}\r\n            slidesToShow={1}\r\n            slidesToScroll={1}\r\n          >\r\n            {images.map((v) => (\r\n              <ImgWrapper key={v.src}>\r\n                <img style={{ maxHeight: \"700px\" }} src={`http://localhost:3065/${v.src}`} alt={v.src} />\r\n              </ImgWrapper>\r\n            ))}\r\n          </Slick>\r\n          <Indicator>\r\n            <div>\r\n              {currentSlide + 1}\r\n              {\"\"}/{images.length}\r\n            </div>\r\n          </Indicator>\r\n        </div>\r\n      </SlickWrapper>\r\n    </Overlay>\r\n  );\r\n};\r\nImagesZoom.propTypes = {\r\n  images: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImagesZoom;\r\n//initialSlide={0}첫번쨰 사진은 무엇으로\r\n//afterChange={(slide) => setcurrentSlide} 페이지를 넘길때 마다 번호를줌\r\n//infinite는 끝에서 더 넘기면 처음걸로감 , arrow는 화살표 사라짐, 무조건 클릭해서 넘겨야함\r\n\r\n//스타일은 중요한 부분이 아니기에 styles.js에서 받아 오는걸로 하는거\r\n//거기에 export 했으니 다른데서 쉽게 가져다 쓸수 있음\r\n//이건 제일 중요한 로직이니 index.js 로 한것\r\n"]},"metadata":{},"sourceType":"module"}