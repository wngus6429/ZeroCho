{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\wngus\\\\Documents\\\\GitHub\\\\ZeroCho\\\\nodebird\\\\prepare\\\\front\\\\pages\\\\index.js\";\nimport React from \"react\"; //next는 이거 없어도됨\n\nimport AppLayout from \"../components/AppLayout\";\nimport { useSelector } from \"react-redux\";\nimport PostCard from \"../components/PostCard\";\nimport PostForm from \"../components/PostForm\"; //next는 pages라는 폴더를 인식한다 그래서 그 파일을 개별적인 페이지 컴포넌트로 만들어짐\n\nconst Home = () => {\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    mainPosts\n  } = useSelector(state => state.post);\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [me && /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 14\n    }, this), mainPosts.map(post => /*#__PURE__*/_jsxDEV(PostCard, {\n      post: post\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Home; //위에 index를 key로 하면 안됨. 특히 게시글이 지워질 가능성이 있는경우에는 특히\n//순서가 달라지거나 중간에 뭐가 추가될때 key를 index로 쓰면안됨.\n//바뀌지 않는거다. 반복문이 있고 그 데이터가 바뀌지 않을때는 key를 index로 쓸수 있음.\n//post안에 id를 사용","map":{"version":3,"sources":["C:/Users/wngus/Documents/GitHub/ZeroCho/nodebird/prepare/front/pages/index.js"],"names":["React","AppLayout","useSelector","PostCard","PostForm","Home","me","state","user","mainPosts","post","map","id"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAA2B;;AAC3B,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB,C,CAEA;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAM;AAAEC,IAAAA;AAAF,MAASJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA1B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAgBP,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACG,IAAlB,CAAjC;AACA,sBACE,QAAC,SAAD;AAAA,eACGJ,EAAE,iBAAI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YADT,EAEGG,SAAS,CAACE,GAAV,CAAeD,IAAD,iBACb,QAAC,QAAD;AAAwB,MAAA,IAAI,EAAEA;AAA9B,OAAeA,IAAI,CAACE,EAApB;AAAA;AAAA;AAAA;AAAA,YADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAXD;;AAaA,eAAeP,IAAf,C,CAEA;AACA;AACA;AACA","sourcesContent":["import React from \"react\"; //next는 이거 없어도됨\r\nimport AppLayout from \"../components/AppLayout\";\r\nimport { useSelector } from \"react-redux\";\r\nimport PostCard from \"../components/PostCard\";\r\nimport PostForm from \"../components/PostForm\";\r\n\r\n//next는 pages라는 폴더를 인식한다 그래서 그 파일을 개별적인 페이지 컴포넌트로 만들어짐\r\n\r\nconst Home = () => {\r\n  const { me } = useSelector((state) => state.user);\r\n  const { mainPosts } = useSelector((state) => state.post);\r\n  return (\r\n    <AppLayout>\r\n      {me && <PostForm />}\r\n      {mainPosts.map((post) => (\r\n        <PostCard key={post.id} post={post} />\r\n      ))}\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n\r\n//위에 index를 key로 하면 안됨. 특히 게시글이 지워질 가능성이 있는경우에는 특히\r\n//순서가 달라지거나 중간에 뭐가 추가될때 key를 index로 쓰면안됨.\r\n//바뀌지 않는거다. 반복문이 있고 그 데이터가 바뀌지 않을때는 key를 index로 쓸수 있음.\r\n//post안에 id를 사용\r\n"]},"metadata":{},"sourceType":"module"}