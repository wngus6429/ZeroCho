{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\wngus\\\\Documents\\\\GitHub\\\\ZeroCho\\\\nodebird\\\\prepare\\\\front\\\\components\\\\imagesZoom\\\\index.js\";\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Slick from \"react-slick\";\nimport styled from \"styled-components\"; //함수는 func`` 백틱 두개로 호출 할수도 있다\n//밑에 styled.div``은 함수ㅋㅋ\n\nconst Overlay = styled.div`\n  position: fixed;\n  z-index: 5000; //이건 자바스크립트 문법임\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n`;\nconst Header = styled.header`\n  height: 44px;\n  background: white;\n  position: relative;\n  padding: 0;\n  text-align: center;\n\n  & h1 {\n    margin: 0;\n    font-size: 17px;\n    color: #333;\n    line-height: 44px;\n  }\n`;\nconst CloseButton = styled.button``;\n\nconst ImagesZoom = ({\n  images,\n  onClose\n}) => {\n  const {\n    0: currentSlide,\n    1: setcurrentSlide\n  } = useState(0);\n  return /*#__PURE__*/_jsxDEV(Overlay, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uC0C1\\uC138\\uC774\\uBBF8\\uC9C0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClose,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Slick, {\n          initialSlide: 0,\n          afterChange: slide => setcurrentSlide(slide),\n          infinite: true,\n          arrows: false,\n          slidesToShow: 1,\n          slidesToScroll: 1,\n          children: images.map(v => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: v.src,\n              alt: v.src\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this)\n          }, v.src, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\nImagesZoom.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onClose: PropTypes.func.isRequired\n};\nexport default ImagesZoom; //initialSlide={0}첫번쨰 사진은 무엇으로\n//afterChange={(slide) => setcurrentSlide} 페이지를 넘길때 마다 번호를줌\n//infinite는 끝에서 더 넘기면 처음걸로감 , arrow는 화살표 사라짐, 무조건 클릭해서 넘겨야함","map":{"version":3,"sources":["C:/Users/wngus/Documents/GitHub/ZeroCho/nodebird/prepare/front/components/imagesZoom/index.js"],"names":["React","useState","PropTypes","Slick","styled","Overlay","div","Header","header","CloseButton","button","ImagesZoom","images","onClose","currentSlide","setcurrentSlide","slide","map","v","src","propTypes","arrayOf","object","isRequired","func"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;AACA;;AAEA,MAAMC,OAAO,GAAGD,MAAM,CAACE,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;AASA,MAAMC,MAAM,GAAGH,MAAM,CAACI,MAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;AAeA,MAAMC,WAAW,GAAGL,MAAM,CAACM,MAAO,EAAlC;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAAyB;AAC1C,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkCd,QAAQ,CAAC,CAAD,CAAhD;AACA,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,MAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEY,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAA,6BACE;AAAA,+BACE,QAAC,KAAD;AACE,UAAA,YAAY,EAAE,CADhB;AAEE,UAAA,WAAW,EAAGG,KAAD,IAAWD,eAAe,CAACC,KAAD,CAFzC;AAGE,UAAA,QAAQ,MAHV;AAIE,UAAA,MAAM,EAAE,KAJV;AAKE,UAAA,YAAY,EAAE,CALhB;AAME,UAAA,cAAc,EAAE,CANlB;AAAA,oBAQGJ,MAAM,CAACK,GAAP,CAAYC,CAAD,iBACV;AAAA,mCACE;AAAK,cAAA,GAAG,EAAEA,CAAC,CAACC,GAAZ;AAAiB,cAAA,GAAG,EAAED,CAAC,CAACC;AAAxB;AAAA;AAAA;AAAA;AAAA;AADF,aAAUD,CAAC,CAACC,GAAZ;AAAA;AAAA;AAAA;AAAA,kBADD;AARH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CA5BD;;AA6BAR,UAAU,CAACS,SAAX,GAAuB;AACrBR,EAAAA,MAAM,EAAEV,SAAS,CAACmB,OAAV,CAAkBnB,SAAS,CAACoB,MAA5B,EAAoCC,UADvB;AAErBV,EAAAA,OAAO,EAAEX,SAAS,CAACsB,IAAV,CAAeD;AAFH,CAAvB;AAKA,eAAeZ,UAAf,C,CACA;AACA;AACA","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Slick from \"react-slick\";\r\nimport styled from \"styled-components\";\r\n\r\n//함수는 func`` 백틱 두개로 호출 할수도 있다\r\n//밑에 styled.div``은 함수ㅋㅋ\r\n\r\nconst Overlay = styled.div`\r\n  position: fixed;\r\n  z-index: 5000; //이건 자바스크립트 문법임\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  height: 44px;\r\n  background: white;\r\n  position: relative;\r\n  padding: 0;\r\n  text-align: center;\r\n\r\n  & h1 {\r\n    margin: 0;\r\n    font-size: 17px;\r\n    color: #333;\r\n    line-height: 44px;\r\n  }\r\n`;\r\n\r\nconst CloseButton = styled.button``;\r\n\r\nconst ImagesZoom = ({ images, onClose }) => {\r\n  const [currentSlide, setcurrentSlide] = useState(0);\r\n  return (\r\n    <Overlay>\r\n      <Header>\r\n        <h1>상세이미지</h1>\r\n        <Button onClick={onClose}>X</Button>\r\n      </Header>\r\n      <div>\r\n        <div>\r\n          <Slick\r\n            initialSlide={0}\r\n            afterChange={(slide) => setcurrentSlide(slide)}\r\n            infinite\r\n            arrows={false}\r\n            slidesToShow={1}\r\n            slidesToScroll={1}\r\n          >\r\n            {images.map((v) => (\r\n              <div key={v.src}>\r\n                <img src={v.src} alt={v.src} />\r\n              </div>\r\n            ))}\r\n          </Slick>\r\n        </div>\r\n      </div>\r\n    </Overlay>\r\n  );\r\n};\r\nImagesZoom.propTypes = {\r\n  images: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImagesZoom;\r\n//initialSlide={0}첫번쨰 사진은 무엇으로\r\n//afterChange={(slide) => setcurrentSlide} 페이지를 넘길때 마다 번호를줌\r\n//infinite는 끝에서 더 넘기면 처음걸로감 , arrow는 화살표 사라짐, 무조건 클릭해서 넘겨야함\r\n"]},"metadata":{},"sourceType":"module"}